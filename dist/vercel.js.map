{
  "version": 3,
  "sources": ["../node_modules/yaml/browser/dist/index.js", "../node_modules/yaml/browser/dist/nodes/identity.js", "../node_modules/yaml/browser/dist/visit.js", "../node_modules/yaml/browser/dist/doc/directives.js", "../node_modules/yaml/browser/dist/doc/anchors.js", "../node_modules/yaml/browser/dist/doc/applyReviver.js", "../node_modules/yaml/browser/dist/nodes/toJS.js", "../node_modules/yaml/browser/dist/nodes/Node.js", "../node_modules/yaml/browser/dist/nodes/Alias.js", "../node_modules/yaml/browser/dist/nodes/Scalar.js", "../node_modules/yaml/browser/dist/doc/createNode.js", "../node_modules/yaml/browser/dist/nodes/Collection.js", "../node_modules/yaml/browser/dist/stringify/stringifyComment.js", "../node_modules/yaml/browser/dist/stringify/foldFlowLines.js", "../node_modules/yaml/browser/dist/stringify/stringifyString.js", "../node_modules/yaml/browser/dist/stringify/stringify.js", "../node_modules/yaml/browser/dist/stringify/stringifyPair.js", "../node_modules/yaml/browser/dist/log.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/merge.js", "../node_modules/yaml/browser/dist/nodes/addPairToJSMap.js", "../node_modules/yaml/browser/dist/nodes/Pair.js", "../node_modules/yaml/browser/dist/stringify/stringifyCollection.js", "../node_modules/yaml/browser/dist/nodes/YAMLMap.js", "../node_modules/yaml/browser/dist/schema/common/map.js", "../node_modules/yaml/browser/dist/nodes/YAMLSeq.js", "../node_modules/yaml/browser/dist/schema/common/seq.js", "../node_modules/yaml/browser/dist/schema/common/string.js", "../node_modules/yaml/browser/dist/schema/common/null.js", "../node_modules/yaml/browser/dist/schema/core/bool.js", "../node_modules/yaml/browser/dist/stringify/stringifyNumber.js", "../node_modules/yaml/browser/dist/schema/core/float.js", "../node_modules/yaml/browser/dist/schema/core/int.js", "../node_modules/yaml/browser/dist/schema/core/schema.js", "../node_modules/yaml/browser/dist/schema/json/schema.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/float.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/int.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/set.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js", "../node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js", "../node_modules/yaml/browser/dist/schema/tags.js", "../node_modules/yaml/browser/dist/schema/Schema.js", "../node_modules/yaml/browser/dist/stringify/stringifyDocument.js", "../node_modules/yaml/browser/dist/doc/Document.js", "../node_modules/yaml/browser/dist/errors.js", "../node_modules/yaml/browser/dist/compose/resolve-props.js", "../node_modules/yaml/browser/dist/compose/util-contains-newline.js", "../node_modules/yaml/browser/dist/compose/util-flow-indent-check.js", "../node_modules/yaml/browser/dist/compose/util-map-includes.js", "../node_modules/yaml/browser/dist/compose/resolve-block-map.js", "../node_modules/yaml/browser/dist/compose/resolve-block-seq.js", "../node_modules/yaml/browser/dist/compose/resolve-end.js", "../node_modules/yaml/browser/dist/compose/resolve-flow-collection.js", "../node_modules/yaml/browser/dist/compose/compose-collection.js", "../node_modules/yaml/browser/dist/compose/resolve-block-scalar.js", "../node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js", "../node_modules/yaml/browser/dist/compose/compose-scalar.js", "../node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js", "../node_modules/yaml/browser/dist/compose/compose-node.js", "../node_modules/yaml/browser/dist/compose/compose-doc.js", "../node_modules/yaml/browser/dist/compose/composer.js", "../node_modules/yaml/browser/dist/parse/cst.js", "../node_modules/yaml/browser/dist/parse/cst-scalar.js", "../node_modules/yaml/browser/dist/parse/cst-stringify.js", "../node_modules/yaml/browser/dist/parse/cst-visit.js", "../node_modules/yaml/browser/dist/parse/lexer.js", "../node_modules/yaml/browser/dist/parse/line-counter.js", "../node_modules/yaml/browser/dist/parse/parser.js", "../node_modules/yaml/browser/dist/public-api.js", "../node_modules/yaml/browser/index.js", "../src/utils.js", "../src/proxies.js", "../src/mihomo.js", "../src/outbounds.js", "../src/singbox.js", "../src/v2ray.js", "../src/css.js", "../src/page.js", "../src/vercel.js"],
  "sourcesContent": ["export { Composer } from './compose/composer.js';\nexport { Document } from './doc/Document.js';\nexport { Schema } from './schema/Schema.js';\nexport { YAMLError, YAMLParseError, YAMLWarning } from './errors.js';\nexport { Alias } from './nodes/Alias.js';\nexport { isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq } from './nodes/identity.js';\nexport { Pair } from './nodes/Pair.js';\nexport { Scalar } from './nodes/Scalar.js';\nexport { YAMLMap } from './nodes/YAMLMap.js';\nexport { YAMLSeq } from './nodes/YAMLSeq.js';\nimport * as cst from './parse/cst.js';\nexport { cst as CST };\nexport { Lexer } from './parse/lexer.js';\nexport { LineCounter } from './parse/line-counter.js';\nexport { Parser } from './parse/parser.js';\nexport { parse, parseAllDocuments, parseDocument, stringify } from './public-api.js';\nexport { visit, visitAsync } from './visit.js';\n", "const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n", "import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/identity.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n", "import { isNode } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/s);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix) {\n            try {\n                return prefix + decodeURIComponent(suffix);\n            }\n            catch (error) {\n                onError(String(error));\n                return null;\n            }\n        }\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n", "import { isScalar, isCollection } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            prevAnchors ?? (prevAnchors = anchorNames(doc));\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n", "/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                // eslint-disable-next-line @typescript-eslint/no-array-delete\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n", "import { hasAnchor } from './identity.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n", "import { applyReviver } from '../doc/applyReviver.js';\nimport { NODE_TYPE, isDocument } from './identity.js';\nimport { toJS } from './toJS.js';\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexport { NodeBase };\n", "import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { ALIAS, isAlias, isCollection, isPair, hasAnchor } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc, ctx) {\n        let nodes;\n        if (ctx?.aliasResolveCache) {\n            nodes = ctx.aliasResolveCache;\n        }\n        else {\n            nodes = [];\n            visit(doc, {\n                Node: (_key, node) => {\n                    if (isAlias(node) || hasAnchor(node))\n                        nodes.push(node);\n                }\n            });\n            if (ctx)\n                ctx.aliasResolveCache = nodes;\n        }\n        let found = undefined;\n        for (const node of nodes) {\n            if (node === this)\n                break;\n            if (node.anchor === this.source)\n                found = node;\n        }\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc, ctx);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            toJS(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n", "import { SCALAR } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n", "import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            ref.anchor ?? (ref.anchor = onAnchor(value));\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n", "import { createNode } from '../doc/createNode.js';\nimport { isNode, isPair, isCollection, isScalar } from './identity.js';\nimport { NodeBase } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\n\nexport { Collection, collectionFromPath, isEmptyPath };\n", "/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n", "const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    if (lineWidth < minContentWidth)\n        minContentWidth = 0;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i, indent.length);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i, indent.length);\n            end = i + indent.length + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i, indent) {\n    let end = i;\n    let start = i + 1;\n    let ch = text[start];\n    while (ch === ' ' || ch === '\\t') {\n        if (i < start + indent) {\n            ch = text[++i];\n        }\n        else {\n            do {\n                ch = text[++i];\n            } while (ch && ch !== '\\n');\n            end = i;\n            start = i + 1;\n            ch = text[start];\n        }\n    }\n    return end;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n", "import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_FLOW, FOLD_QUOTED, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    // Leading | or > is added later\n    let header = (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (!literal) {\n        const foldedValue = value\n            .replace(/\\n+/g, '\\n$&')\n            .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n            //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n            .replace(/\\n+/g, `$&${indent}`);\n        let literalFallback = false;\n        const foldOptions = getFoldOptions(ctx, true);\n        if (blockQuote !== 'folded' && type !== Scalar.BLOCK_FOLDED) {\n            foldOptions.onOverflow = () => {\n                literalFallback = true;\n            };\n        }\n        const body = foldFlowLines(`${start}${foldedValue}${end}`, indent, FOLD_BLOCK, foldOptions);\n        if (!literalFallback)\n            return `>${header}\\n${indent}${body}`;\n    }\n    value = value.replace(/\\n+/g, `$&${indent}`);\n    return `|${header}\\n${indent}${start}${value}${end}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && value.includes('\\n')) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (/^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n", "import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/identity.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        let match = tags.filter(t => t.identify?.(obj));\n        if (match.length > 1) {\n            const testMatch = match.filter(t => t.test);\n            if (testMatch.length > 0)\n                match = testMatch;\n        }\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? (obj === null ? 'null' : typeof obj);\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ?? (tagObj.default ? null : tagObj.tag);\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    tagObj ?? (tagObj = getTagObject(ctx.doc.schema.tags, node));\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n", "import { isCollection, isNode, isScalar, isSeq } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key) || (!isNode(key) && typeof key === 'object')) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n", "function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n", "import { isScalar, isAlias, isSeq, isMap } from '../../nodes/identity.js';\nimport { Scalar } from '../../nodes/Scalar.js';\n\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nconst MERGE_KEY = '<<';\nconst merge = {\n    identify: value => value === MERGE_KEY ||\n        (typeof value === 'symbol' && value.description === MERGE_KEY),\n    default: 'key',\n    tag: 'tag:yaml.org,2002:merge',\n    test: /^<<$/,\n    resolve: () => Object.assign(new Scalar(Symbol(MERGE_KEY)), {\n        addToJSMap: addMergeToJSMap\n    }),\n    stringify: () => MERGE_KEY\n};\nconst isMergeKey = (ctx, key) => (merge.identify(key) ||\n    (isScalar(key) &&\n        (!key.type || key.type === Scalar.PLAIN) &&\n        merge.identify(key.value))) &&\n    ctx?.doc.schema.tags.some(tag => tag.tag === merge.tag && tag.default);\nfunction addMergeToJSMap(ctx, map, value) {\n    value = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (isSeq(value))\n        for (const it of value.items)\n            mergeValue(ctx, map, it);\n    else if (Array.isArray(value))\n        for (const it of value)\n            mergeValue(ctx, map, it);\n    else\n        mergeValue(ctx, map, value);\n}\nfunction mergeValue(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\n\nexport { addMergeToJSMap, isMergeKey, merge };\n", "import { warn } from '../log.js';\nimport { isMergeKey, addMergeToJSMap } from '../schema/yaml-1.1/merge.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isNode } from './identity.js';\nimport { toJS } from './toJS.js';\n\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (isNode(key) && key.addToJSMap)\n        key.addToJSMap(ctx, map, value);\n    // TODO: Should drop this special case for bare << handling\n    else if (isMergeKey(ctx, key))\n        addMergeToJSMap(ctx, map, value);\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx?.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n", "import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n", "import { isNode, isPair } from '../nodes/identity.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ items }, ctx, { flowChars, itemIndent }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik?.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        return start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = ctx.options.lineWidth > 0 && len > ctx.options.lineWidth;\n        }\n        if (reqNewline) {\n            let str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            return `${str}\\n${indent}${end}`;\n        }\n        else {\n            return `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n", "import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { MAP, isPair, isScalar } from './identity.js';\nimport { Pair, createPair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push(createPair(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n", "import { isMap } from '../../nodes/identity.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => YAMLMap.from(schema, obj, ctx)\n};\n\nexport { map };\n", "import { createNode } from '../doc/createNode.js';\nimport { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './identity.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push(createNode(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n", "import { isSeq } from '../../nodes/identity.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => YAMLSeq.from(schema, obj, ctx)\n};\n\nexport { seq };\n", "import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n", "function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n", "import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true$|^false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array, // Buffer inherits from Uint8Array\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        if (!value)\n            return '';\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        type ?? (type = Scalar.BLOCK_LITERAL);\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n", "import { isSeq, isPair, isMap } from '../../nodes/identity.js';\nimport { createPair, Pair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else {\n                    throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n                }\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n", "import { isScalar, isPair } from '../../nodes/identity.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexport { YAMLOMap, omap };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n", "import { isMap, isPair, isScalar } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { YAMLSet, set };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value?.toISOString().replace(/(T00:00:00)?\\.000Z$/, '') ?? ''\n};\n\nexport { floatTime, intTime, timestamp };\n", "import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { merge } from './merge.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    merge,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n", "import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { floatNaN, floatExp, float } from './core/float.js';\nimport { intOct, intHex, int } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { merge } from './yaml-1.1/merge.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { timestamp, intTime, floatTime } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    merge,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:merge': merge,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName, addMergeTag) {\n    const schemaTags = schemas.get(schemaName);\n    if (schemaTags && !customTags) {\n        return addMergeTag && !schemaTags.includes(merge)\n            ? schemaTags.concat(merge)\n            : schemaTags.slice();\n    }\n    let tags = schemaTags;\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    if (addMergeTag)\n        tags = tags.concat(merge);\n    return tags.reduce((tags, tag) => {\n        const tagObj = typeof tag === 'string' ? tagsByName[tag] : tag;\n        if (!tagObj) {\n            const tagName = JSON.stringify(tag);\n            const keys = Object.keys(tagsByName)\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown custom tag ${tagName}; use one of ${keys}`);\n        }\n        if (!tags.includes(tagObj))\n            tags.push(tagObj);\n        return tags;\n    }, []);\n}\n\nexport { coreKnownTags, getTags };\n", "import { MAP, SCALAR, SEQ } from '../nodes/identity.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name, merge);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n", "import { isNode } from '../nodes/identity.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n", "import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            stringKeys: false,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n", "class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '\u2026' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '\u2026';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '\u2026\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n", "function resolveProps(tokens, { flow, indicator, next, offset, onError, parentIndent, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let reqSpace = false;\n    let tab = null;\n    let anchor = null;\n    let tag = null;\n    let newlineAfterProp = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        if (tab) {\n            if (atNewline && token.type !== 'comment' && token.type !== 'newline') {\n                onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n            }\n            tab = null;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    (indicator !== 'doc-start' || next?.type !== 'flow-collection') &&\n                    token.source.includes('\\t')) {\n                    tab = token;\n                }\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else if (!found || indicator !== 'seq-item-ind')\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    newlineAfterProp = token;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                start ?? (start = token.offset);\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                start ?? (start = token.offset);\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline =\n                    indicator === 'seq-item-ind' || indicator === 'explicit-key-ind';\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== '')) {\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    }\n    if (tab &&\n        ((atNewline && tab.indent <= parentIndent) ||\n            next?.type === 'block-map' ||\n            next?.type === 'block-seq'))\n        onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        anchor,\n        tag,\n        newlineAfterProp,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n", "function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n", "import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n", "import { isScalar } from '../nodes/identity.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b || (isScalar(a) && isScalar(b) && a.value === b.value);\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n", "import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.newlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        ctx.atKey = true;\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        ctx.atKey = false;\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n", "import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            parentIndent: bs.indent,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n", "function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n", "import { isPair } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? YAMLMap : YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: fc.indent,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // \u2192 key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            ctx.atKey = true;\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            ctx.atKey = false;\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                parentIndent: fc.indent,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                const endRange = (valueNode ?? keyNode).range;\n                map.range = [keyNode.range[0], endRange[1], endRange[2]];\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n", "import { isNode } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? resolveBlockMap(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? resolveBlockSeq(CN, ctx, token, onError, tag)\n            : resolveFlowCollection(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, props, onError) {\n    const tagToken = props.tag;\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (token.type === 'block-seq') {\n        const { anchor, newlineAfterProp: nl } = props;\n        const lastProp = anchor && tagToken\n            ? anchor.offset > tagToken.offset\n                ? anchor\n                : tagToken\n            : (anchor ?? tagToken);\n        if (lastProp && (!nl || nl.offset < lastProp.offset)) {\n            const message = 'Missing newline after block sequence props';\n            onError(lastProp, 'MISSING_CHAR', message);\n        }\n    }\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === YAMLMap.tagName && expType === 'map') ||\n        (tagName === YAMLSeq.tagName && expType === 'seq')) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection ?? 'scalar'}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n", "import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(ctx, scalar, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, ctx.options.strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            if (trimIndent === 0 && !ctx.atRoot) {\n                const message = 'Block scalar values in collections must be indented';\n                onError(offset, 'BAD_INDENT', message);\n            }\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n", "import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0', // null character\n    a: '\\x07', // bell character\n    b: '\\b', // backspace\n    e: '\\x1b', // escape character\n    f: '\\f', // form feed\n    n: '\\n', // line feed\n    r: '\\r', // carriage return\n    t: '\\t', // horizontal tab\n    v: '\\v', // vertical tab\n    N: '\\u0085', // Unicode next line\n    _: '\\u00a0', // Unicode non-breaking space\n    L: '\\u2028', // Unicode line separator\n    P: '\\u2029', // Unicode paragraph separator\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n", "import { isScalar, SCALAR } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(ctx, token, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    let tag;\n    if (ctx.options.stringKeys && ctx.atKey) {\n        tag = ctx.schema[SCALAR];\n    }\n    else if (tagName)\n        tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);\n    else if (token.type === 'scalar')\n        tag = findScalarTagByTest(ctx, value, token, onError);\n    else\n        tag = ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ atKey, directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => (tag.default === true || (atKey && tag.default === 'key')) &&\n        tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n", "function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        pos ?? (pos = before.length);\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n", "import { Alias } from '../nodes/Alias.js';\nimport { isScalar } from '../nodes/identity.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const atKey = ctx.atKey;\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, props, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (atKey &&\n        ctx.options.stringKeys &&\n        (!isScalar(node) ||\n            typeof node.value !== 'string' ||\n            (node.tag && node.tag !== 'tag:yaml.org,2002:str'))) {\n        const msg = 'With stringKeys, all keys must be strings';\n        onError(tag ?? token, 'NON_STRING_KEY', msg);\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n", "import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atKey: false,\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        parentIndent: 0,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n", "import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/identity.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n", "export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n", "import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar({ options: { strict } }, token, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n", "/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n", "const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` \u2013 Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` \u2013 Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` \u2013 Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` \u2013 The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n", "import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = new Set('0123456789ABCDEFabcdef');\nconst tagChars = new Set(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\");\nconst flowIndicatorChars = new Set(',[]{}');\nconst invalidAnchorChars = new Set(' ,[]{}\\n\\r\\t');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.has(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            if (typeof source !== 'string')\n                throw TypeError('source is not a string');\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            let cs = line.indexOf('#');\n            while (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t') {\n                    dirEnd = cs - 1;\n                    break;\n                }\n                else {\n                    cs = line.indexOf('#', cs + 1);\n                }\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if ((s === '---' || s === '...') && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return s === '---' ? 'doc' : 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else {\n                this.indentNext =\n                    this.blockScalarIndent + (this.indentNext === 0 ? 1 : this.indentNext);\n            }\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        // Trailing insufficiently indented tabs are invalid.\n        // To catch that during parsing, we include them in the block scalar value.\n        let i = nl + 1;\n        ch = this.buffer[i];\n        while (ch === ' ')\n            ch = this.buffer[++i];\n        if (ch === '\\t') {\n            while (ch === '\\t' || ch === ' ' || ch === '\\r' || ch === '\\n')\n                ch = this.buffer[++i];\n            nl = i - 1;\n        }\n        else if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && flowIndicatorChars.has(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && flowIndicatorChars.has(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.has(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.has(this.buffer[i + 1]) &&\n                    hexDigits.has(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n", "/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n", "import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !it.explicitKey;\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atMapIndent = !this.onKeyLine && this.indent === map.indent;\n            const atNextItem = atMapIndent &&\n                (it.sep || it.explicitKey) &&\n                this.type !== 'seq-item-ind';\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !it.explicitKey) {\n                        it.start.push(this.sourceToken);\n                        it.explicitKey = true;\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start, explicitKey: true });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken], explicitKey: true }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (it.explicitKey) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key;\n                            // @ts-expect-error type guard is wrong here\n                            delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (bv.type === 'block-seq') {\n                            if (!it.explicitKey &&\n                                it.sep &&\n                                !includesToken(it.sep, 'newline')) {\n                                yield* this.pop({\n                                    type: 'error',\n                                    offset: this.offset,\n                                    message: 'Unexpected block-seq-ind on same line with key',\n                                    source: this.source\n                                });\n                                return;\n                            }\n                        }\n                        else if (atMapIndent) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, explicitKey: true }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n", "import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { isDocument } from './nodes/identity.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    if (isDocument(value) && !_replacer)\n        return value.toString(options);\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n", "// `export * as default from ...` fails on Webpack v4\n// https://github.com/eemeli/yaml/issues/228\nimport * as YAML from './dist/index.js'\nexport default YAML\nexport * from './dist/index.js'\n", "// import fetch from 'node-fetch';\nimport YAML from 'yaml';\nexport const backimg = base64DecodeUtf8('aHR0cHM6Ly90LmFsY3kuY2MveWN5');\nexport const subapi = base64DecodeUtf8('aHR0cHM6Ly9zdWItc3RvcnQtbm9kZWpzLnBhZ2VzLmRldg==');\nexport const mihomo_top = base64DecodeUtf8(\n    'aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0t3aXNtYS9jZi13b3JrZXItbWlob21vL21haW4vQ29uZmlnL01paG9tb19saXRlLnlhbWw='\n);\nexport const singbox_1_11 = base64DecodeUtf8(\n    'aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0t3aXNtYS9jZi13b3JrZXItbWlob21vL3JlZnMvaGVhZHMvbWFpbi9Db25maWcvc2luZ2JveF8xLjExLlguanNvbg=='\n);\nexport const singbox_1_12 = base64DecodeUtf8(\n    'aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0t3aXNtYS9jZi13b3JrZXItbWlob21vL3JlZnMvaGVhZHMvbWFpbi9Db25maWcvc2luZ2JveC0xLjEyLlguanNvbg=='\n);\nexport const singbox_1_12_alpha = base64DecodeUtf8(\n    'aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0t3aXNtYS9jZi13b3JrZXItbWlob21vL3JlZnMvaGVhZHMvbWFpbi9Db25maWcvc2luZ2JveC0xLjEyLlguYWxwaGEuanNvbg=='\n);\nexport const singbox_1_13 = base64DecodeUtf8(\n    'aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0t3aXNtYS9jZi13b3JrZXItbWlob21vL3JlZnMvaGVhZHMvbWFpbi9Db25maWcvc2luZ2JveC0xLjEzLlguanNvbg=='\n);\nexport const beiantext = base64DecodeUtf8('6JCMSUNQ5aSHMjAyNTAwMDHlj7c=');\nexport const beiandizi = base64DecodeUtf8('aHR0cHM6Ly90Lm1lL01hcmlzYV9rcmlzdGk=');\n// \u5B9E\u73B0base64\u89E3\u7801UTF-8\u5B57\u7B26\u4E32\u7684\u51FD\u6570\nexport function base64DecodeUtf8(str) {\n    const binary = atob(str);\n    const bytes = Uint8Array.from(binary, (char) => char.charCodeAt(0));\n    return new TextDecoder('utf-8').decode(bytes);\n}\n// \u5B9E\u73B0base64\u7F16\u7801UTF-8\u5B57\u7B26\u4E32\u7684\u51FD\u6570\nexport function base64EncodeUtf8(str) {\n    const bytes = new TextEncoder('utf-8').encode(str);\n    const binary = String.fromCharCode.apply(null, bytes);\n    return btoa(binary);\n}\n// \u8BA2\u9605\u94FE\u63A5\nexport function buildApiUrl(rawUrl, BASE_API, ua) {\n    const params = new URLSearchParams({\n        target: ua,\n        url: rawUrl,\n        emoji: 'true',\n        list: 'true',\n        new_name: 'true',\n    });\n    return `${BASE_API}/sub?${params}`;\n}\n// \u5904\u7406\u8BF7\u6C42\nexport async function fetchResponse(url, userAgent) {\n    if (!userAgent) {\n        userAgent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3';\n    }\n    let response;\n    try {\n        response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                'User-Agent': 'sub-store-node/' + userAgent,\n            },\n        });\n    } catch {\n        return true;\n    }\n    // \u76F4\u63A5\u4F7F\u7528 Object.fromEntries \u8F6C\u6362 headers\n    const headersObj = Object.fromEntries(response.headers.entries());\n    // \u66FF\u6362\u975E\u6CD5 Content-Disposition \u5B57\u6BB5Add commentMore actions\n    const sanitizedCD = sanitizeContentDisposition(response.headers);\n    if (sanitizedCD) {\n        headersObj['content-disposition'] = sanitizedCD;\n    }\n    // \u83B7\u53D6\u54CD\u5E94\u4F53\u7684\u6587\u672C\u5185\u5BB9\n    const textData = await response.text();\n\n    let jsonData;\n    try {\n        jsonData = YAML.parse(textData, { maxAliasCount: -1, merge: true });\n    } catch (e) {\n        try {\n            jsonData = JSON.parse(textData);\n        } catch (yamlError) {\n            // \u82E5YAML\u89E3\u6790\u4E5F\u5931\u8D25\uFF0C\u4FDD\u7559\u539F\u59CB\u6587\u672C\n            jsonData = textData;\n        }\n    }\n    return {\n        status: response.status,\n        headers: headersObj,\n        data: jsonData,\n    };\n}\n// \u5C06\u8BA2\u9605\u94FE\u63A5\u548C\u4EE3\u7406\u5730\u5740\u5206\u79BB\nexport function splitUrlsAndProxies(urls) {\n    const result = [];\n    let proxyText = '';\n\n    for (const url of urls) {\n        if (url.startsWith('http://') || url.startsWith('https://')) {\n            result.push(url);\n        } else {\n            if (proxyText) {\n                proxyText += '|';\n            }\n            proxyText += url;\n        }\n    }\n    if (proxyText) {\n        result.push(proxyText);\n    }\n    return result;\n}\n/**\n * \u83B7\u53D6\u6A21\u677F\u6570\u636E\n * @param {string} top - \u6A21\u677F\u6587\u4EF6\u5730\u5740\n * @returns {Promise<Object|null>} - \u8FD4\u56DE\u6A21\u677F\u6570\u636E\u5BF9\u8C61\uFF0C\u6216\u6CA1\u6709\u6A21\u677F\u65F6\u8FD4\u56DE null\n */\nexport async function Top_Data(top) {\n    return await fetchResponse(top);\n}\n/**\n * \u83B7\u53D6\u57FA\u7840\u914D\u7F6E\u6570\u636E\uFF0C\u82E5\u672A\u63D0\u4F9B\u5219\u4F7F\u7528\u9ED8\u8BA4\u914D\u7F6E\u5730\u5740\n * @param {string} rule - \u914D\u7F6E\u6587\u4EF6\u5730\u5740\n * @returns {Promise<Object>} - \u8FD4\u56DE\u914D\u7F6E\u6570\u636E\u5BF9\u8C61\n */\nexport async function Rule_Data(rule) {\n    if (!rule) {\n        throw new Error(`\u7F3A\u5C11\u89C4\u5219\u6A21\u677F`);\n    }\n    return await fetchResponse(rule);\n}\n\nexport function configs(mihomo = '', singbox = '') {\n    const data = {\n        mihomo: [\n            {\n                label: '\u901A\u7528',\n                options: [\n                    {\n                        label: '\u9ED8\u8BA4(\u7CBE\u7B80\u7248) (\u4EC5\u56FD\u5185\u5916\u5206\u6D41) (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/Mihomo_default.yaml',\n                    },\n                    {\n                        label: '\u9ED8\u8BA4(\u7CBE\u7B80\u7248) (\u4EC5\u56FD\u5185\u5916\u5206\u6D41) (\u65E0\u53BB\u5E7F\u544A) (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/Mihomo_default_NoAds.yaml',\n                    },\n                    {\n                        label: '\u9ED8\u8BA4(mihomo\u5B98\u65B9\u7248) (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/Mihomo_official.yaml',\n                    },\n                    {\n                        label: '\u9ED8\u8BA4(mihomo\u5B98\u65B9\u7248) (\u65E0\u53BB\u5E7F\u544A) (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/Mihomo_official_NoAds.yaml',\n                    },\n                    {\n                        label: '\u9ED8\u8BA4(ACL4SSR_Online_Full) (\u4E0EGithub\u540C\u6B65)',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/Mihomo_ACL4SSR_Online_Full.yaml',\n                    },\n                    {\n                        label: '\u9ED8\u8BA4(ACL4SSR_Online_Full) (\u65E0\u53BB\u5E7F\u544AMihomo_ACL4SSR_Online_Full_NoAds.yaml) (\u4E0EGithub\u540C\u6B65)',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/Mihomo_ACL4SSR_Online_Full_NoAds.yaml',\n                    },\n                    {\n                        label: '\u9ED8\u8BA4(\u5168\u5206\u7EC4) (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/Mihomo_default_full.yaml',\n                    },\n                    {\n                        label: '\u9ED8\u8BA4(\u5168\u5206\u7EC4) (\u65E0\u53BB\u5E7F\u544A) (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/Mihomo_default_full_NoAds.yaml',\n                    },\n                ],\n            },\n            {\n                label: 'Lanlan13-14',\n                options: [\n                    {\n                        label: 'configfull \u5168\u5206\u7EC4\u7248 (\u79CB\u98CE\u53BB\u5E7F\u544A) (\u4E0EGithub\u540C\u6B65)',\n                        value: 'https://raw.githubusercontent.com/Lanlan13-14/Rules/main/configfull.yaml',\n                    },\n                    {\n                        label: 'configfull_NoAd \u5168\u5206\u7EC4\u7248 (\u65E0\u53BB\u5E7F\u544A) (\u4E0EGithub\u540C\u6B65)',\n                        value: 'https://raw.githubusercontent.com/Lanlan13-14/Rules/main/configfull_NoAd.yaml',\n                    },\n                    {\n                        label: 'configfull_NoAd_lite \u5168\u5206\u7EC4\u7248 (\u65E0\u53BB\u5E7F\u544A) (\u7CBE\u7B80\u7248) (\u4E0EGithub\u540C\u6B65)',\n                        value: 'https://raw.githubusercontent.com/Lanlan13-14/Rules/main/configfull_NoAd_lite.yaml',\n                    },\n                    {\n                        label: 'configfull_lite \u5168\u5206\u7EC4\u7248 (\u7CBE\u7B80\u7248) (\u4E0EGithub\u540C\u6B65)',\n                        value: 'https://raw.githubusercontent.com/Lanlan13-14/Rules/main/configfull_lite.yaml',\n                    },\n                ],\n            },\n            {\n                label: 'zhuqq2020',\n                options: [\n                    {\n                        label: 'ACL4SSR_Online_Full \u5168\u5305\u91CD\u5EA6\u7528\u6237\u4F7F\u7528(\u4E0EGithub\u540C\u6B65)',\n                        value: 'https://raw.githubusercontent.com/zhuqq2020/Mihomo-Party-ACL4SSR/main/ACL4SSR_Online_Full.yaml',\n                    },\n                    {\n                        label: 'ACL4SSR_Online_Full_AdblockPlus \u5168\u5305\u91CD\u5EA6\u7528\u6237\u4F7F\u7528\u66F4\u591A\u53BB\u5E7F\u544A(\u4E0EGithub\u540C\u6B65)',\n                        value: 'https://raw.githubusercontent.com/zhuqq2020/Mihomo-Party-ACL4SSR/main/ACL4SSR_Online_Full_AdblockPlus.yaml',\n                    },\n                    {\n                        label: 'ACL4SSR_Online_Full_Tiktok \u5168\u5305\u91CD\u5EA6\u7528\u6237\u4F7F\u7528\u6296\u97F3\u5168\u91CF(\u4E0EGithub\u540C\u6B65)',\n                        value: 'https://raw.githubusercontent.com/zhuqq2020/Mihomo-Party-ACL4SSR/main/ACL4SSR_Online_Full_Tiktok.yaml',\n                    },\n                    {\n                        label: 'ACL4SSR_Online_Full_WithIcon \u5168\u5305\u91CD\u5EA6\u7528\u6237\u4F7F\u7528(\u4E0EGithub\u540C\u6B65)(\u65E0\u56FE\u6807)',\n                        value: 'https://raw.githubusercontent.com/zhuqq2020/Mihomo-Party-ACL4SSR/main/ACL4SSR_Online_Full_WithIcon.yaml',\n                    },\n                    {\n                        label: 'ACL4SSR_Online_Mini_MultiMode \u4E13\u4E1A\u7248\u81EA\u52A8\u6D4B\u901F\u3001\u6545\u969C\u8F6C\u79FB\u3001\u8D1F\u8F7D\u5747\u8861(\u4E0EGithub\u540C\u6B65)',\n                        value: 'https://raw.githubusercontent.com/zhuqq2020/Mihomo-Party-ACL4SSR/main/ACL4SSR_Online_Mini_MultiMode.yaml',\n                    },\n                    {\n                        label: '\u6781\u7B80\u5206\u6D41\u89C4\u5219',\n                        value: 'https://raw.githubusercontent.com/zhuqq2020/Mihomo-Party-ACL4SSR/main/\u6781\u7B80\u5206\u6D41\u89C4\u5219.yaml',\n                    },\n                ],\n            },\n            {\n                label: 'mihomo-party-org',\n                options: [\n                    {\n                        label: '\u5E03\u4E01\u72D7\u7684\u8BA2\u9605\u8F6C\u6362 (\u4E0EGithub\u540C\u6B65)',\n                        value: 'https://raw.githubusercontent.com/mihomo-party-org/override-hub/main/yaml/%E5%B8%83%E4%B8%81%E7%8B%97%E7%9A%84%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2.yaml',\n                    },\n                    {\n                        label: 'ACL4SSR_Online_Full (\u4E0EGithub\u540C\u6B65)',\n                        value: 'https://raw.githubusercontent.com/mihomo-party-org/override-hub/main/yaml/ACL4SSR_Online_Full.yaml',\n                    },\n                    {\n                        label: 'ACL4SSR_Online_Full_WithIcon (\u4E0EGithub\u540C\u6B65)',\n                        value: 'https://raw.githubusercontent.com/mihomo-party-org/override-hub/main/yaml/ACL4SSR_Online_Full_WithIcon.yaml',\n                    },\n                ],\n            },\n        ],\n        singbox: [\n            {\n                label: '\u901A\u7528',\n                options: [\n                    {\n                        label: '\u9ED8\u8BA4(\u7CBE\u7B80\u7248) (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/singbox_default.yaml',\n                    },\n                    {\n                        label: '\u9ED8\u8BA4(\u7CBE\u7B80\u7248) (\u65E0\u53BB\u5E7F\u544A) (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/singbox_default_NoAds.yaml',\n                    },\n                    {\n                        label: '\u9ED8\u8BA4(mini\u7248) (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/singbox_default_mini.yaml',\n                    },\n                    {\n                        label: '\u9ED8\u8BA4(mini\u7248) (\u65E0\u53BB\u5E7F\u544A) (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/singbox_default_mini_NoAds.yaml',\n                    },\n                    {\n                        label: '\u9ED8\u8BA4(\u5168\u5206\u7EC4) (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/singbox_default_full.yaml',\n                    },\n                    {\n                        label: '\u9ED8\u8BA4(\u5168\u5206\u7EC4) (\u65E0\u53BB\u5E7F\u544A) (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/singbox_default_full_NoAds.yaml',\n                    },\n                    {\n                        label: 'DustinWin \u5168\u5206\u7EC4\u7248 (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/singbox_DustinWin_full.yaml',\n                    },\n                    {\n                        label: 'DustinWin \u5168\u5206\u7EC4\u7248 (\u65E0\u53BB\u5E7F\u544A) (\u4E0EGithub\u540C\u6B65) ',\n                        value: 'https://raw.githubusercontent.com/Kwisma/cf-worker-mihomo/main/template/singbox_DustinWin_full_NoAds.yaml',\n                    },\n                ],\n            },\n        ],\n    };\n    if (mihomo) {\n        data.mihomo[0].options.unshift({\n            label: '\u81EA\u5B9A\u4E49\u89C4\u5219',\n            value: mihomo,\n        });\n    }\n    if (singbox) {\n        data.singbox[0].options.unshift({\n            label: '\u81EA\u5B9A\u4E49\u89C4\u5219',\n            value: singbox,\n        });\n    }\n    return JSON.stringify(data);\n}\nexport function modes(sub, userAgent) {\n    const modes = {\n        mihomo: {\n            name: 'Clash (mihomo)',\n            placeholder: '\u8BF7\u8F93\u5165clash\u8BA2\u9605\u5730\u5740url\uFF0C\u652F\u6301\u5404\u79CD\u8BA2\u9605\u6216\u5355\u8282\u70B9\u94FE\u63A5',\n            tipText: `\n## mihomo \u4F7F\u7528\u63D0\u793A\uFF1A\n\n- \u652F\u6301\u5404\u79CD\u8BA2\u9605\u6216\u5355\u8282\u70B9\u94FE\u63A5\uFF0C\u81EA\u52A8\u5408\u5E76\u751F\u6210\u914D\u7F6E\n- \u9762\u677F\u5730\u5740: http://127.0.0.1:9090/ui/xd\n- mixed(http/socks) \u7AEF\u53E3: 7890\n- \u4F7F\u7528 sub-store \u540E\u7AEF\u8F6C\u6362\n- \u9002\u7528\u4E8E mihomo \u5BA2\u6237\u7AEF\n- \u53BB\u5E7F\u544A\u4F7F\u7528 [\u79CB\u98CE\u5E7F\u544A\u89C4\u5219](https://github.com/TG-Twilight/AWAvenue-Ads-Rule.git)\n- \u9632\u6B62 DNS \u6CC4\u6F0F(\u5B89\u5168DNS/DoH)\n- \u5C4F\u853D WebRTC \u6CC4\u6F0F(\u9632\u6B62\u771F\u5B9EIP\u66B4\u9732)\n- \u5173\u95ED\u6240\u6709\u8986\u5199\u529F\u80FD(\u4E0D\u662F\u5173\u95ED\u529F\u80FD\uFF0C\u662F\u5173\u95ED\u8986\u5199)\u4EE5\u786E\u4FDD\u914D\u7F6E\u6B63\u5E38\u751F\u6548\n\n## \u9644\u52A0\u53C2\u6570\u8BF4\u660E\n\n- UDP : \u542F\u7528 UDP \u4EE3\u7406\u6D41\u91CF [\u67E5\u770B\u8BE6\u60C5](https://wiki.metacubex.one/config/proxies/#udp)\n- \u5206\u5E94\u7528\u4EE3\u7406: \u6392\u9664 CN \u5E94\u7528(\u4EC5\u5305\u542Bandroid\u5E94\u7528)\u4E0D\u5165\u4EE3\u7406\u5DE5\u5177 [\u67E5\u770B\u8BE6\u60C5](https://wiki.metacubex.one/config/inbound/tun/#exclude-package)\n- \u5206IPCIDR\u4EE3\u7406: \u6392\u9664 CN IP \u4E0D\u8FDB\u5165\u4EE3\u7406\u5DE5\u5177 [\u67E5\u770B\u8BE6\u60C5](https://wiki.metacubex.one/config/inbound/tun/#route-exclude-address)\n- \u53BB\u5E7F\u544Adns: \u76F4\u8FDE\u4F7F\u7528 [dns.18bit.cn](https://www.18bit.cn), \u4EE3\u7406\u4F7F\u7528 [dns.adguard-dns.com](https://adguard-dns.io/)\n- \u4EC5\u4EE3\u7406: \u5173\u95ED VPN \u4EE3\u7406\uFF0C\u4F7F\u7528 mixed(http/socks) \u7AEF\u53E3\u8FDB\u884C\u4EE3\u7406\u3002\u5B9E\u9645\u5C31\u662F\u5173\u95ED\u4E86 tun \u5165\u7AD9\n\n## \u914D\u7F6E\u4FE1\u606F\n\n**userAgent** ${userAgent}\n\n**\u8F6C\u6362\u540E\u7AEF** ${sub}\n                `,\n            protocolOptions: [\n                { value: 'udp', label: '\u542F\u7528 UDP', checked: true },\n                { value: 'ep', label: '\u542F\u7528 \u5206\u5E94\u7528\u4EE3\u7406(\u4EC5Android)' },\n                { value: 'ea', label: '\u542F\u7528 \u5206IPCIDR\u4EE3\u7406(ios/macOS/windows/linux \u63A8\u8350)' },\n                { value: 'adgdns', label: '\u542F\u7528 \u53BB\u5E7F\u544Adns' },\n                { value: 'tun', label: '\u542F\u7528 \u4EC5\u4EE3\u7406' },\n            ],\n        },\n        singbox: {\n            name: 'Singbox',\n            placeholder: '\u8BF7\u8F93\u5165singbox\u8BA2\u9605\u5730\u5740url\uFF0C\u652F\u6301\u5404\u79CD\u8BA2\u9605\u6216\u5355\u8282\u70B9\u94FE\u63A5',\n            tipText: `\n## singbox \u4F7F\u7528\u63D0\u793A\uFF1A\n\n- \u652F\u6301\u5404\u79CD\u8BA2\u9605\u6216\u5355\u8282\u70B9\u94FE\u63A5\uFF0C\u81EA\u52A8\u5408\u5E76\u751F\u6210\u914D\u7F6E\n- \u9762\u677F\u5730\u5740: http://127.0.0.1:20123\n- mixed(http/socks) \u7AEF\u53E3: 20120\n- \u4F7F\u7528 sub-store \u540E\u7AEF\u8F6C\u6362\n- \u9002\u7528\u4E8E sing-box \u5BA2\u6237\u7AEF\n- \u652F\u6301 1.11.x\n- \u652F\u6301 1.12.x\n- \u652F\u6301 1.13.x\n- \u53BB\u5E7F\u544A\u4F7F\u7528 [\u79CB\u98CE\u5E7F\u544A\u89C4\u5219](https://github.com/TG-Twilight/AWAvenue-Ads-Rule.git)\n- \u9632\u6B62 DNS \u6CC4\u6F0F(\u5B89\u5168DNS/DoH)\n- \u5C4F\u853D WebRTC \u6CC4\u6F0F(\u9632\u6B62\u771F\u5B9EIP\u66B4\u9732)\n- \u5173\u95ED\u6240\u6709\u8986\u5199\u529F\u80FD(\u4E0D\u662F\u5173\u95ED\u529F\u80FD\uFF0C\u662F\u5173\u95ED\u8986\u5199)\u4EE5\u786E\u4FDD\u914D\u7F6E\u6B63\u5E38\u751F\u6548\n\n## \u9644\u52A0\u53C2\u6570\u8BF4\u660E\n\n- UDP: \u542F\u7528 UDP \u4EE3\u7406\u6D41\u91CF [\u67E5\u770B\u8BE6\u60C5](https://sing-box.sagernet.org/zh/configuration/route/rule_action/#udp_disable_domain_unmapping)\n- UDP \u5206\u6BB5: [\u67E5\u770B\u8BE6\u60C5](https://sing-box.sagernet.org/zh/configuration/shared/dial/#udp_fragment)\n- TLS \u5206\u6BB5: \u7ED5\u8FC7\u88AB\u9632\u706B\u5899\u62E6\u622A\u7684\u57DF\u540D [\u67E5\u770B\u8BE6\u60C5](https://sing-box.sagernet.org/zh/configuration/route/rule_action/#tls_fragment)\n- \u5206\u5E94\u7528\u4EE3\u7406: \u6392\u9664 CN \u5E94\u7528(\u4EC5\u5305\u542Bandroid\u5E94\u7528)\u4E0D\u5165\u4EE3\u7406\u5DE5\u5177 [\u67E5\u770B\u8BE6\u60C5](https://sing-box.sagernet.org/zh/configuration/inbound/tun/#exclude_package)\n- \u5206IPCIDR\u4EE3\u7406: \u6392\u9664 CN IP \u4E0D\u8FDB\u5165\u4EE3\u7406\u5DE5\u5177 [\u67E5\u770B\u8BE6\u60C5](https://sing-box.sagernet.org/zh/configuration/inbound/tun/#route_exclude_address)\n- tailscale: [\u67E5\u770B\u8BE6\u60C5](https://sing-box.sagernet.org/zh/configuration/endpoint/tailscale)\n- \u53BB\u5E7F\u544Adns: \u76F4\u8FDE\u4F7F\u7528 [dns.18bit.cn](https://www.18bit.cn), \u4EE3\u7406\u4F7F\u7528 [dns.adguard-dns.com](https://adguard-dns.io/)\n- \u4EC5\u4EE3\u7406: \u5173\u95ED VPN \u4EE3\u7406\uFF0C\u4F7F\u7528 mixed(http/socks) \u7AEF\u53E3\u8FDB\u884C\u4EE3\u7406\u3002\u5B9E\u9645\u5C31\u662F\u5173\u95ED\u4E86 tun \u5165\u7AD9\n\n## \u914D\u7F6E\u4FE1\u606F\n\n**userAgent** ${userAgent}\n\n**\u8F6C\u6362\u540E\u7AEF** ${sub}\n                `,\n            protocolOptions: [\n                { value: 'udp', label: '\u542F\u7528 UDP', checked: true },\n                { value: 'udp_frag', label: '\u542F\u7528 UDP \u5206\u6BB5' },\n                { value: 'tls_frag', label: '\u542F\u7528 TLS \u5206\u6BB5' },\n                { value: 'ep', label: '\u542F\u7528 \u5206\u5E94\u7528\u4EE3\u7406(\u4EC5Android)' },\n                { value: 'ea', label: '\u542F\u7528 \u5206IPCIDR\u4EE3\u7406(ios/macOS/windows/linux \u63A8\u8350)' },\n                { value: 'tailscale', label: '\u542F\u7528 tailscale' },\n                { value: 'adgdns', label: '\u542F\u7528 \u53BB\u5E7F\u544Adns' },\n                { value: 'tun', label: '\u542F\u7528 \u4EC5\u4EE3\u7406' },\n            ],\n        },\n        v2ray: {\n            name: 'V2Ray',\n            placeholder: '\u8BF7\u8F93\u5165V2Ray\u8BA2\u9605\u5730\u5740url, \u652F\u6301\u5404\u79CD\u8BA2\u9605\u6216\u5355\u8282\u70B9\u94FE\u63A5',\n            tipText: `\n**\u8F6C\u6362\u540E\u7AEF** ${sub}\n                `,\n            protocolOptions: [],\n            noTemplate: true, // \u6DFB\u52A0\u6B64\u6807\u5FD7\u8868\u793A\u4E0D\u9700\u8981 protocolOptions \u548C \u6A21\u677F\n        },\n    };\n    return JSON.stringify(modes);\n}\n\nexport function sanitizeContentDisposition(headers) {\n    const contentDisposition = headers.get('Content-Disposition') || headers.get('content-disposition');\n\n    if (!contentDisposition) return null;\n\n    const filenameMatch = contentDisposition.match(/filename=\"?([^\"]+)\"?/);\n\n    if (!filenameMatch) return null;\n\n    const originalFilename = filenameMatch[1];\n\n    // \u68C0\u67E5\u662F\u5426\u542B\u4E2D\u6587(\u6216\u975E ASCII)\n    const isNonAscii = /[^\\x00-\\x7F]/.test(originalFilename);\n    if (!isNonAscii) return contentDisposition; // \u4E0D\u542B\u4E2D\u6587\uFF0C\u4FDD\u6301\u539F\u6837\n\n    // \u4F7F\u7528 fallback ASCII \u540D + filename*=UTF-8''xxx \u5F62\u5F0F\u66FF\u6362\n    const fallback = 'download.json';\n    const encoded = encodeURIComponent(originalFilename);\n\n    return `attachment; filename=\"${fallback}\"; filename*=UTF-8''${encoded}`;\n}\n/**\n * \u83B7\u53D6\u5E94\u7528\u5305\u540D\u5217\u8868\n * @returns {Promise<Object>} - \u8FD4\u56DE\u914D\u7F6E\u6570\u636E\u5BF9\u8C61\n */\nexport async function fetchpackExtract() {\n    const processNames = new Set();\n    const urls = [\n        'https://github.com/mnixry/direct-android-ruleset/raw/refs/heads/rules/@Merged/GAME.mutated.yaml',\n        'https://github.com/mnixry/direct-android-ruleset/raw/refs/heads/rules/@Merged/APP.mutated.yaml',\n    ];\n    const excludeCommentKeywords = ['\u6D4F\u89C8\u5668'];\n    const excludeNames = new Set(['com.android.chrome']);\n    for (const url of urls) {\n        const res = await fetch(url, {\n            headers: {\n                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3',\n            },\n        });\n        if (!res.ok) {\n            console.error(`\u274C \u8BF7\u6C42\u5931\u8D25: ${url} - ${res.status} ${res.statusText}`);\n            continue;\n        }\n        const text = await res.text();\n        for (const line of text.split('\\n')) {\n            const match = line.match(/PROCESS-NAME\\s*,\\s*([^\\s,]+)/);\n            if (match) {\n                const processName = match[1];\n                const hasExcludedComment = excludeCommentKeywords.some((keyword) => line.includes(keyword));\n                if (!hasExcludedComment && !excludeNames.has(processName)) {\n                    processNames.add(processName);\n                }\n            }\n        }\n    }\n    return [...processNames];\n}\n/**\n * \u83B7\u53D6IPCIDR\u5217\u8868\n * @returns {Promise<Object>} - \u8FD4\u56DE\u914D\u7F6E\u6570\u636E\u5BF9\u8C61\n */\nexport async function fetchipExtract() {\n    const urls = ['https://raw.githubusercontent.com/Kwisma/clash-rules/release/cncidr.yaml'];\n    const ipcidrs = [];\n\n    for (const url of urls) {\n        const res = await fetch(url, {\n            headers: {\n                'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3',\n            },\n        });\n        if (!res.ok) {\n            console.error(`\u274C \u8BF7\u6C42\u5931\u8D25: ${url} - ${res.status} ${res.statusText}`);\n            continue;\n        }\n        const data = await res.text();\n        const jsondata = YAML.parse(data, { maxAliasCount: -1, merge: true });\n\n        if (Array.isArray(jsondata.payload)) {\n            ipcidrs.push(...jsondata.payload);\n        }\n    }\n    return ipcidrs;\n}\n", "import * as utils from './utils.js';\nexport default async function getMihomo_Proxies_Data(e) {\n    // \u5904\u7406\u5355\u4E2AURL\u7684\u60C5\u51B5\n    if (e.urls.length === 1) {\n        return await handleSingleUrl(e);\n    }\n\n    // \u5904\u7406\u591A\u4E2AURL\u7684\u60C5\u51B5\n    return await handleMultipleUrls(e);\n}\n\n// \u5904\u7406\u5355\u4E2AURL\u7684\u8F85\u52A9\u51FD\u6570\nasync function handleSingleUrl(e) {\n    let res = await fetchWithFallback(e.urls[0], e.userAgent, e.sub);\n\n    if (res?.data?.proxies && Array.isArray(res.data.proxies) && res.data.proxies.length > 0) {\n        processProxies(res.data.proxies, e.udp);\n        return formatResponse(res, { providers: {} });\n    }\n\n    return null;\n}\n\n// \u5904\u7406\u591A\u4E2AURL\u7684\u8F85\u52A9\u51FD\u6570\nasync function handleMultipleUrls(e) {\n    const data = {\n        proxies: [],\n        providers: {},\n    };\n\n    const responseList = [];\n\n    for (let i = 0; i < e.urls.length; i++) {\n        const res = await fetchWithFallback(e.urls[i], e.userAgent, e.sub);\n\n        if (res?.data?.proxies && Array.isArray(res.data.proxies)) {\n            processProxies(res.data.proxies, e.udp, i + 1);\n            responseList.push({\n                status: res.status,\n                headers: res.headers,\n            });\n            data.proxies.push(...res.data.proxies);\n        }\n    }\n\n    if (responseList.length === 0) {\n        return null;\n    }\n\n    const randomIndex = Math.floor(Math.random() * responseList.length);\n    const selectedResponse = responseList[randomIndex];\n\n    return {\n        status: selectedResponse.status,\n        headers: selectedResponse.headers,\n        data: data,\n    };\n}\n\n// \u901A\u7528\u83B7\u53D6\u54CD\u5E94\u51FD\u6570\uFF0C\u652F\u6301\u56DE\u9000\u673A\u5236\nasync function fetchWithFallback(url, userAgent, sub) {\n    let res = await utils.fetchResponse(url, userAgent);\n\n    if (res?.data?.proxies && Array.isArray(res.data.proxies) && res.data.proxies.length > 0) {\n        return res;\n    }\n\n    // \u5982\u679C\u7B2C\u4E00\u6B21\u8BF7\u6C42\u5931\u8D25\uFF0C\u5C1D\u8BD5\u4F7F\u7528\u6784\u5EFA\u7684API URL\n    const apiUrl = utils.buildApiUrl(url, sub, 'clash.meta');\n    return await utils.fetchResponse(apiUrl, userAgent);\n}\n\n// \u5904\u7406\u4EE3\u7406\u6570\u7EC4\u7684\u8F85\u52A9\u51FD\u6570\nfunction processProxies(proxies, udpEnabled, index = null) {\n    proxies.forEach((proxy) => {\n        if (index !== null) {\n            proxy.name = `${proxy.name} [${index}]`;\n        }\n        if (udpEnabled) {\n            proxy.udp = true;\n        }\n    });\n}\n\n// \u683C\u5F0F\u5316\u54CD\u5E94\u7684\u8F85\u52A9\u51FD\u6570\nfunction formatResponse(originalResponse, additionalData = {}) {\n    return {\n        status: originalResponse.status,\n        headers: originalResponse.headers,\n        data: {\n            ...originalResponse.data,\n            ...additionalData,\n        },\n    };\n}\n", "import * as utils from './utils.js';\nimport getMihomo_Proxies_Data from './proxies.js';\n\nexport async function getmihomo_config(e) {\n    if (!/meta|clash.meta|clash|clashverge|mihomo/i.test(e.userAgent)) {\n        throw new Error('\u4E0D\u652F\u6301\u7684\u5BA2\u6237\u7AEF');\n    }\n    e.urls = utils.splitUrlsAndProxies(e.urls);\n    const [Mihomo_Top_Data, Mihomo_Rule_Data, Mihomo_Proxies_Data, Exclude_Package, Exclude_Address] = await Promise.all([\n        utils.Top_Data(e.Mihomo_default),\n        utils.Rule_Data(e.rule),\n        getMihomo_Proxies_Data(e),\n        e.exclude_package ? utils.fetchpackExtract() : null,\n        e.exclude_address ? utils.fetchipExtract() : null,\n    ]);\n    e.Exclude_Package = Exclude_Package;\n    e.Exclude_Address = Exclude_Address;\n    if (!Mihomo_Proxies_Data?.data?.proxies || Mihomo_Proxies_Data?.data?.proxies?.length === 0) throw new Error('\u8282\u70B9\u4E3A\u7A7A');\n    Mihomo_Rule_Data.data.proxies = [...(Mihomo_Rule_Data?.data?.proxies || []), ...Mihomo_Proxies_Data?.data?.proxies];\n    Mihomo_Rule_Data.data['proxy-groups'] = getMihomo_Proxies_Grouping(Mihomo_Proxies_Data.data, Mihomo_Rule_Data.data);\n    Mihomo_Rule_Data.data['proxy-providers'] = Mihomo_Proxies_Data?.data?.providers;\n    applyTemplate(Mihomo_Top_Data.data, Mihomo_Rule_Data.data, e);\n    return {\n        status: Mihomo_Proxies_Data.status,\n        headers: Mihomo_Proxies_Data.headers,\n        data: JSON.stringify(Mihomo_Top_Data.data, null, 4),\n    };\n}\n\n/**\n * \u5C06\u6A21\u677F\u4E2D\u7684 proxies\u3001proxy-groups\u3001rules \u7B49\u5B57\u6BB5\u5408\u5E76\u5230\u76EE\u6807\u914D\u7F6E\u5BF9\u8C61\n * @param {Object} target - \u76EE\u6807\u914D\u7F6E\u5BF9\u8C61\uFF08\u57FA\u7840\u914D\u7F6E\uFF09\n * @param {Object} template - \u6A21\u677F\u914D\u7F6E\u5BF9\u8C61\n */\nexport function applyTemplate(top, rule, e) {\n    top['proxy-providers'] = rule['proxy-providers'] || {};\n    top.proxies = rule.proxies || [];\n    top['proxy-groups'] = rule['proxy-groups'] || [];\n    top.rules = rule.rules || [];\n    top['sub-rules'] = rule['sub-rules'] || {};\n    top['rule-providers'] = { ...(top['rule-providers'] || {}), ...(rule['rule-providers'] || {}) };\n\n    if (e.tun && top.tun) {\n        top.tun.enable = false;\n    } else if (top.tun) {\n        if (e.exclude_address && e.Exclude_Address) {\n            top.tun['route-address'] = ['0.0.0.0/1', '128.0.0.0/1', '::/1', '8000::/1'];\n            top.tun['route-exclude-address'] = e.Exclude_Address || [];\n        }\n        if (e.exclude_package && e.Exclude_Package) {\n            top.tun['include-package'] = [];\n            top.tun['exclude-package'] = e.Exclude_Package || [];\n        }\n    }\n    if (e.adgdns) {\n        top.dns.nameserver = ['https://dns.adguard-dns.com/dns-query'];\n        top.dns['nameserver-policy']['RULE-SET:private_domain,cn_domain'] = ['quic://dns.18bit.cn'];\n    }\n}\n\n/**\n * \u83B7\u53D6 Mihomo \u4EE3\u7406\u5206\u7EC4\u4FE1\u606F\n * @param {Array} proxies - \u4EE3\u7406\u5217\u8868\n * @param {Array} groups - \u7B56\u7565\u7EC4\n * @returns {Object} \u5206\u7EC4\u4FE1\u606F\n */\nexport function getMihomo_Proxies_Grouping(proxies, groups) {\n    const deletedGroups = []; // \u7528\u4E8E\u8BB0\u5F55\u5DF2\u5220\u9664\u7684\u7EC4\u540D\n    const updatedGroups = groups['proxy-groups'].filter((group) => {\n        let matchFound = false;\n        // \u786E\u4FDD filter \u5B58\u5728\u5E76\u4E14\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\n        let filter = group.filter;\n        if (typeof filter !== 'string') {\n            return true; // \u4FDD\u7559\u6CA1\u6709 filter \u7684\u7EC4\n        }\n\n        // \u79FB\u9664\u6240\u6709 (?i)\uFF0C\u4F46\u4FDD\u7559\u540E\u7EED\u5185\u5BB9\n        const hasIgnoreCase = /\\(\\?i\\)/i.test(filter);\n        const cleanedFilter = filter.replace(/\\(\\?i\\)/gi, '');\n\n        let regex;\n        try {\n            regex = new RegExp(cleanedFilter, hasIgnoreCase ? 'i' : '');\n        } catch (e) {\n            console.warn(`\u65E0\u6548\u7684\u6B63\u5219\u8868\u8FBE\u5F0F: ${filter}`, e);\n            return true; // \u9047\u5230\u9519\u8BEF\u65F6\u4FDD\u7559\u8BE5\u7EC4\n        }\n\n        // \u904D\u5386\u6BCF\u4E2A\u4EE3\u7406\uFF0C\u68C0\u67E5\u662F\u5426\u4E0E\u5F53\u524D\u7EC4\u7684\u6B63\u5219\u5339\u914D\n        for (let proxy of proxies.proxies) {\n            if (regex.test(proxy.name)) {\n                matchFound = true;\n                break;\n            }\n        }\n\n        // \u5982\u679C\u6CA1\u6709\u5339\u914D\uFF0C\u8BB0\u5F55\u5220\u9664\u7684\u7EC4\u5E76\u8FD4\u56DE false (\u5220\u9664\u8BE5\u7EC4)\n        if (!matchFound && (!group.proxies || group.proxies.length === 0)) {\n            deletedGroups.push(group.name);\n            return false;\n        }\n\n        return true;\n    });\n\n    // \u904D\u5386\u6240\u6709\u7B56\u7565\u7EC4\uFF0C\u5220\u9664 deletedGroups \u4E2D\u7684\u4EE3\u7406\n    updatedGroups.forEach((group) => {\n        if (group.proxies) {\n            group.proxies = group.proxies.filter((proxyName) => {\n                // \u53EA\u5220\u9664\u90A3\u4E9B\u5728 deletedGroups \u4E2D\u7684\u4EE3\u7406\n                return !deletedGroups.some((deletedGroup) => {\n                    return deletedGroup.includes(proxyName); // \u68C0\u67E5 deletedGroups \u4E2D\u662F\u5426\u5305\u542B\u8BE5\u4EE3\u7406\u540D\u79F0\n                });\n            });\n        }\n    });\n\n    return updatedGroups;\n}\n", "import * as utils from './utils.js';\nexport default async function getSingbox_Outbounds_Data(e) {\n    // \u5904\u7406\u5355\u4E2A URL \u7684\u60C5\u51B5\n    if (e.urls.length === 1) {\n        return await processSingleUrl(e.urls[0], e);\n    }\n\n    // \u5904\u7406\u591A\u4E2A URL \u7684\u60C5\u51B5\n    return await processMultipleUrls(e);\n}\n\n// \u5904\u7406\u5355\u4E2A URL\nasync function processSingleUrl(url, options) {\n    let response = await fetchWithFallback(url, options, false);\n\n    if (response?.data?.outbounds?.length > 0) {\n        processOutbounds(response.data.outbounds, options, 0);\n        return formatResponse(response);\n    }\n\n    return null;\n}\n\n// \u5904\u7406\u591A\u4E2A URL\nasync function processMultipleUrls(options) {\n    const outboundsList = [];\n    const responseList = [];\n\n    for (let i = 0; i < options.urls.length; i++) {\n        const response = await fetchWithFallback(options.urls[i], options, true, i + 1);\n\n        if (response?.data?.outbounds?.length > 0) {\n            processOutbounds(response.data.outbounds, options, i + 1);\n            responseList.push(response);\n            outboundsList.push(response.data.outbounds);\n        }\n    }\n\n    if (responseList.length === 0) {\n        throw new Error('No valid outbounds found from any URL');\n    }\n\n    const randomResponse = responseList[Math.floor(Math.random() * responseList.length)];\n\n    return {\n        status: randomResponse.status,\n        headers: randomResponse.headers,\n        data: { outbounds: outboundsList.flat() },\n    };\n}\n\n// \u5E26\u56DE\u9000\u673A\u5236\u7684\u8BF7\u6C42\nasync function fetchWithFallback(url, options, addIndex, index = null) {\n    let response = await utils.fetchResponse(url, options.userAgent);\n\n    if (hasValidOutbounds(response)) {\n        return response;\n    }\n\n    // \u5C1D\u8BD5\u4F7F\u7528\u6784\u5EFA\u7684 API URL\n    const apiUrl = utils.buildApiUrl(url, options.sub, 'singbox');\n    response = await utils.fetchResponse(apiUrl, options.userAgent);\n\n    if (hasValidOutbounds(response)) {\n        return response;\n    }\n\n    return null;\n}\n\n// \u68C0\u67E5\u54CD\u5E94\u662F\u5426\u5305\u542B\u6709\u6548\u7684 outbounds\nfunction hasValidOutbounds(response) {\n    return response?.data?.outbounds && Array.isArray(response.data.outbounds);\n}\n\n// \u5904\u7406 outbounds \u6570\u7EC4\nfunction processOutbounds(outbounds, options, index) {\n    outbounds.forEach((outbound) => {\n        if (index > 0) {\n            outbound.tag = `${outbound.tag} [${index}]`;\n        }\n        if (options.udp_fragment) {\n            outbound.udp_fragment = true;\n        }\n    });\n}\n\n// \u683C\u5F0F\u5316\u54CD\u5E94\nfunction formatResponse(response) {\n    return {\n        status: response.status,\n        headers: response.headers,\n        data: response.data,\n    };\n}\n", "import * as utils from './utils.js';\nimport getSingbox_Outbounds_Data from './outbounds.js';\nexport async function getsingbox_config(e) {\n    const top = Verbose(e);\n    e.urls = utils.splitUrlsAndProxies(e.urls);\n    const [Singbox_Top_Data, Singbox_Rule_Data, Singbox_Outbounds_Data, Exclude_Package, Exclude_Address] = await Promise.all([\n        utils.Top_Data(top),\n        utils.Rule_Data(e.rule),\n        getSingbox_Outbounds_Data(e),\n        e.exclude_package ? utils.fetchpackExtract() : null,\n        e.exclude_address ? utils.fetchipExtract() : null,\n    ]);\n    e.Exclude_Package = Exclude_Package;\n    e.Exclude_Address = Exclude_Address;\n    if (!Singbox_Outbounds_Data?.data?.outbounds || Singbox_Outbounds_Data?.data?.outbounds?.length === 0)\n        throw new Error(`\u8282\u70B9\u4E3A\u7A7A\uFF0C\u8BF7\u4F7F\u7528\u6709\u6548\u8BA2\u9605`);\n\n    Singbox_Outbounds_Data.data.outbounds = outboundArrs(Singbox_Outbounds_Data.data);\n    const ApiUrlname = [];\n    Singbox_Outbounds_Data.data.outbounds.forEach((res) => {\n        ApiUrlname.push(res.tag);\n    });\n    // \u7B56\u7565\u7EC4\u5904\u7406\n    Singbox_Rule_Data.data.outbounds = loadAndSetOutbounds(Singbox_Rule_Data.data.outbounds, ApiUrlname);\n    // \u5408\u5E76 outbounds\n    Singbox_Rule_Data.data.outbounds.push(...Singbox_Outbounds_Data.data.outbounds);\n    applyTemplate(Singbox_Top_Data.data, Singbox_Rule_Data.data, e);\n    return {\n        status: Singbox_Outbounds_Data.status,\n        headers: Singbox_Outbounds_Data.headers,\n        data: JSON.stringify(Singbox_Top_Data.data, null, 4),\n    };\n}\nexport function Verbose(e) {\n    let top,\n        matched = false;\n    const v112alphaMatch = e.userAgent.match(/1\\.12\\.0\\-alpha\\.(\\d{1,2})\\b/);\n    const v112betaMatch = e.userAgent.match(/1\\.12\\.0\\-beta\\.(\\d{1,2})\\b/);\n    const v111Match = e.userAgent.match(/1\\.11\\.(\\d+)/);\n    const v112Match = e.userAgent.match(/1\\.12\\.(\\d+)/);\n    const v113Match = e.userAgent.match(/1\\.13\\.(\\d+)/);\n    if (!/singbox|sing-box|sfa/i.test(e.userAgent)) throw new Error('\u4E0D\u652F\u6301\u7684\u5BA2\u6237\u7AEF');\n    // \u5339\u914D 1.12 alpha \u7248\u672C\n    if (v112alphaMatch && !matched) {\n        const num = parseInt(v112alphaMatch[1], 10);\n        if (num >= 0 && num <= 23) {\n            top = e.singbox_1_12_alpha;\n            matched = true;\n        }\n    }\n    // \u5339\u914D 1.11 \u4E2D\u7684 1.12 beta \u7248\u672C\n    if (v112betaMatch && !matched) {\n        const num = parseInt(v112betaMatch[1], 10);\n        if (num >= 0 && num <= 9) {\n            top = e.singbox_1_11;\n            e.tailscale = false;\n            e.tls_fragment = false;\n            matched = true;\n        }\n    }\n    // \u5339\u914D 1.11.x \u7248\u672C\n    if (v111Match && !matched) {\n        top = e.singbox_1_11;\n        e.tailscale = false;\n        e.tls_fragment = false;\n        matched = true;\n    }\n    // \u5339\u914D 1.12.x \u7248\u672C\n    if (v112Match && !matched) {\n        top = e.singbox_1_12;\n        matched = true;\n    }\n    // \u5339\u914D 1.13.x \u7248\u672C\n    if (v113Match && !matched) {\n        top = e.singbox_1_13;\n        matched = true;\n    }\n    if (!matched) {\n        throw new Error(`\u4E0D\u652F\u6301\u7684 Singbox \u7248\u672C\uFF1A${e.userAgent}`);\n    }\n    return top;\n}\n\n/**\n * \u5904\u7406\u914D\u7F6E\u6587\u4EF6\u4E2D\u7684 outbounds \u6570\u7EC4\uFF1A\n * 1. \u5148\u6392\u9664\u7279\u5B9A\u7C7B\u578B\uFF08\u5982 direct\u3001dns \u7B49\uFF09\uFF1B\n * 2. \u6839\u636E\u53C2\u6570\u51B3\u5B9A\u662F\u5426\u4E3A tag \u6DFB\u52A0\u5E8F\u53F7\u540E\u7F00\uFF1B\n *\n * @param {Object} data - \u5305\u542B outbounds \u6570\u7EC4\u7684\u914D\u7F6E\u5BF9\u8C61\n * @returns {Array<Object>} \u5904\u7406\u540E\u7684 outbounds \u6570\u7EC4\n */\nexport function outboundArrs(data) {\n    const excludedTypes = ['direct', 'block', 'dns', 'selector', 'urltest'];\n    if (data && Array.isArray(data.outbounds)) {\n        const filteredOutbounds = data.outbounds.filter((outbound) => {\n            if (excludedTypes.includes(outbound.type)) return false;\n            if (outbound?.server === '') return false;\n            if (outbound?.server_port < 1) return false;\n            if (outbound?.password === '') return false;\n            return true;\n        });\n        return filteredOutbounds;\n    }\n}\n// \u7B56\u7565\u7EC4\u5904\u7406\nexport function loadAndSetOutbounds(Outbounds, ApiUrlname) {\n    // \u5904\u7406\u6BCF\u4E2A outbound \u7684\u8FC7\u6EE4\u5668\n    const processOutboundFilters = (outbound) => {\n        let matchedOutbounds = [];\n        let hasValidAction = false;\n\n        outbound.filter?.forEach((filter) => {\n            if (filter.action !== 'all') {\n                // \u68C0\u67E5 keywords \u662F\u5426\u5B58\u5728\u4E14\u6709\u6548\n                if (!filter.keywords || typeof filter.keywords !== 'string') {\n                    return;\n                }\n            }\n\n            let currentMatched = [];\n\n            if (filter.action === 'all') {\n                currentMatched = ApiUrlname;\n                hasValidAction = true;\n            } else {\n                // \u5904\u7406\u6B63\u5219\u8868\u8FBE\u5F0F\u6A21\u5F0F\n                const { pattern, ignoreCase } = parseRegexPattern(filter.keywords);\n                const regex = new RegExp(pattern, ignoreCase ? 'i' : '');\n\n                // \u6839\u636E\u4E0D\u540C\u7684 action \u7C7B\u578B\u5904\u7406\u5339\u914D\n                currentMatched = applyFilterAction(ApiUrlname, regex, filter.action);\n                hasValidAction = true;\n            }\n\n            if (currentMatched.length > 0) {\n                matchedOutbounds = [...matchedOutbounds, ...currentMatched];\n            }\n        });\n\n        return { matchedOutbounds: [...new Set(matchedOutbounds)], hasValidAction };\n    };\n\n    // \u89E3\u6790\u6B63\u5219\u8868\u8FBE\u5F0F\u6A21\u5F0F\n    const parseRegexPattern = (keywords) => {\n        if (!keywords || typeof keywords !== 'string') {\n            return { pattern: '^$', ignoreCase: false }; // \u8FD4\u56DE\u4E0D\u5339\u914D\u4EFB\u4F55\u5185\u5BB9\u7684\u6A21\u5F0F\n        }\n\n        const ignoreCase = /\\(\\?i\\)/i.test(keywords);\n        const pattern = keywords.replace(/\\(\\?i\\)/gi, '');\n        return { pattern, ignoreCase };\n    };\n\n    // \u5E94\u7528\u8FC7\u6EE4\u5668\u64CD\u4F5C\n    const applyFilterAction = (items, regex, action) => {\n        switch (action) {\n            case 'include':\n                return items.filter((name) => regex.test(name));\n            case 'exclude':\n                return items.filter((name) => !regex.test(name));\n            default:\n                return [];\n        }\n    };\n\n    // \u66F4\u65B0 outbounds \u6570\u7EC4\n    const updateOutboundsArray = (outbound, matchedOutbounds, hasValidAction) => {\n        if (matchedOutbounds.length > 0) {\n            outbound.outbounds = outbound.outbounds ? [...new Set([...outbound.outbounds, ...matchedOutbounds])] : matchedOutbounds;\n        } else if (outbound.outbounds && outbound.outbounds.length > 0) {\n            // \u4FDD\u7559\u539F\u6709\u7684 outbounds\uFF08\u6CA1\u6709\u5339\u914D\u5230\u4F46\u539F\u672C\u6709\u5185\u5BB9\uFF09\n        } else {\n            delete outbound.outbounds;\n        }\n\n        // \u5220\u9664 filter \u5B57\u6BB5\n        delete outbound.filter;\n        return outbound;\n    };\n\n    // \u6E05\u7406\u88AB\u5220\u9664\u7684 tags\n    const cleanRemovedTags = (outbounds) => {\n        // \u627E\u51FA\u6240\u6709 outbounds \u4E3A\u7A7A\u7684\u9879\uFF08\u5C06\u88AB\u5220\u9664\u7684 tags\uFF09\n        const removedTags = outbounds\n            .filter((item) => !item.outbounds || (Array.isArray(item.outbounds) && item.outbounds.length === 0))\n            .map((item) => item.tag)\n            .filter((tag) => tag !== undefined);\n\n        // \u4ECE\u6240\u6709 outbounds \u6570\u7EC4\u4E2D\u5220\u9664\u8FD9\u4E9B tags\n        const cleanedOutbounds = outbounds.map((item) => {\n            if (item.outbounds && Array.isArray(item.outbounds)) {\n                // \u4E25\u683C\u5339\u914D tag \u540D\u79F0\uFF08\u5B8C\u5168\u76F8\u7B49\uFF09\n                item.outbounds = item.outbounds.filter((tag) => !removedTags.includes(tag));\n            }\n            return item;\n        });\n\n        // \u8FC7\u6EE4\u6389 outbounds \u6570\u7EC4\u4E3A\u7A7A\u6216\u4E0D\u5B58\u5728\u7684\u7B56\u7565\u7EC4\n        return cleanedOutbounds.filter((item) => {\n            return item.outbounds && Array.isArray(item.outbounds) && item.outbounds.length > 0;\n        });\n    };\n\n    // \u4E3B\u5904\u7406\u6D41\u7A0B\n    const processedOutbounds = Outbounds.map((outbound) => {\n        const { matchedOutbounds, hasValidAction } = processOutboundFilters(outbound);\n        return updateOutboundsArray(outbound, matchedOutbounds, hasValidAction);\n    });\n\n    return cleanRemovedTags(processedOutbounds);\n}\n\nexport function applyTemplate(top, rule, e) {\n    const existingSet = Array.isArray(top.route.rule_set) ? top.route.rule_set : [];\n    const newSet = Array.isArray(rule.route.rule_set) ? rule.route.rule_set : [];\n    const mergedMap = new Map();\n    for (const item of existingSet) {\n        if (item?.tag) mergedMap.set(item.tag, item);\n    }\n    for (const item of newSet) {\n        if (item?.tag) mergedMap.set(item.tag, item);\n    }\n    top.inbounds = rule?.inbounds || top.inbounds;\n    top.outbounds = [...(Array.isArray(top.outbounds) ? top.outbounds : []), ...(Array.isArray(rule?.outbounds) ? rule.outbounds : [])];\n    top.route.final = rule?.route?.final || top.route.final;\n    top.route.rules = [...(Array.isArray(top.route.rules) ? top.route.rules : []), ...(Array.isArray(rule?.route?.rules) ? rule.route.rules : [])];\n    top.route.rule_set = Array.from(mergedMap.values());\n\n    // \u6DFB\u52A0\u6392\u9664\u5305\u548C\u6392\u9664\u5730\u5740\u914D\u7F6E\n    if (e.tun) {\n        top.inbounds = top.inbounds.filter((p) => p.type !== 'tun');\n    } else {\n        if (e.exclude_package) addExcludePackage(top, e.Exclude_Package);\n        if (e.exclude_address) addExcludeAddress(top, e.Exclude_Address);\n    }\n    // \u6DFB\u52A0 tailscale \u76F8\u5173\u914D\u7F6E\n    if (e.tailscale) {\n        top.dns.servers.push({\n            type: 'tailscale',\n            endpoint: 'ts-ep',\n            accept_default_resolvers: true,\n        });\n        top.endpoints = top.endpoints || [];\n        top.endpoints.push({\n            type: 'tailscale',\n            tag: 'ts-ep',\n            auth_key: '',\n            hostname: 'singbox-tailscale',\n            udp_timeout: '5m',\n        });\n    }\n\n    if (/ref1nd/i.test(e.userAgent)) {\n        for (const item of top.route.rules) {\n            if (item.action === 'resolve') {\n                item.match_only = true;\n            }\n        }\n    }\n    // \u5904\u7406 route-options \u89C4\u5219\n    top.route.rules = top.route.rules.flatMap((p) => {\n        if (p.action === 'route-options') {\n            if (e.udp) {\n                p.udp_disable_domain_unmapping = true;\n                p.udp_connect = true;\n                p.udp_timeout = '5m';\n            }\n            if (e.tls_fragment) {\n                p.tls_fragment = true;\n                p.tls_fragment_fallback_delay = '5m';\n            }\n            // \u5982\u679C\u65E2\u6CA1\u6709 udp \u4E5F\u6CA1\u6709 tls_fragment \u53C2\u6570\uFF0C\u5219\u8FC7\u6EE4\u6389\u8BE5\u89C4\u5219\n            return e.udp || e.tls_fragment ? p : [];\n        }\n        return p;\n    });\n    if (e.adgdns) {\n        top.dns.servers.flatMap((p) => {\n            if (p.tag === 'DIRECT-DNS') {\n                p = {\n                    type: 'quic',\n                    tag: 'DIRECT-DNS',\n                    detour: '\uD83C\uDFAF \u5168\u7403\u76F4\u8FDE',\n                    server_port: 853,\n                    server: 'dns.18bit.cn',\n                    domain_resolver: 'local',\n                };\n            }\n            if (p.tag === 'PROXY-DNS') {\n                p = {\n                    type: 'https',\n                    tag: 'PROXY-DNS',\n                    detour: '\uD83D\uDE80 \u8282\u70B9\u9009\u62E9',\n                    server_port: 443,\n                    server: 'dns.adguard-dns.com',\n                    domain_resolver: 'local',\n                };\n            }\n            return p;\n        });\n    }\n}\n\nexport function addExcludePackage(singboxTopData, newPackages) {\n    for (const inbound of singboxTopData.inbounds) {\n        if (inbound.type === 'tun') {\n            if (!Array.isArray(inbound['exclude_package'])) {\n                inbound['exclude_package'] = [];\n            }\n            inbound['exclude_package'] = Array.from(new Set([...(inbound['exclude_package'] || []), ...newPackages]));\n        }\n    }\n}\n\nexport function addExcludeAddress(singboxTopData, newddress) {\n    for (const inbound of singboxTopData.inbounds) {\n        if (inbound.type === 'tun') {\n            inbound['route_address'] = ['0.0.0.0/1', '128.0.0.0/1', '::/1', '8000::/1'];\n            if (!Array.isArray(inbound['route_exclude_address'])) {\n                inbound['route_exclude_address'] = [];\n            }\n            inbound['route_exclude_address'] = Array.from(new Set([...(inbound['route_exclude_address'] || []), ...newddress]));\n        }\n    }\n}\n", "import * as utils from './utils.js';\n\nexport async function getv2ray_config(e) {\n    const apiurl = utils.buildApiUrl(e.urls.join(','), e.sub, 'v2ray');\n    const res = await utils.fetchResponse(apiurl, e.userAgent);\n    if (res.data !== undefined && res.data !== null && res.data !== '') {\n        return {\n            status: res.status,\n            headers: res.headers,\n            data: res.data,\n        };\n    } else {\n        throw new Error('\u83B7\u53D6\u8BA2\u9605\u6570\u636E\u5931\u8D25\uFF0C\u8BF7\u68C0\u67E5\u8BA2\u9605\u94FE\u63A5\u662F\u5426\u6709\u6548');\n    }\n}\n", "const CSS = (e) => `\n        :root {\n            --primary-color: #4361ee;\n            --primary-light: #4895ef;\n            --primary-dark: #3f37c9;\n            --secondary-color: #4cc9f0;\n            --bg-color: #f8f9fa;\n            --card-bg: #ffffff;\n            --text-primary: #2b2d42;\n            --text-secondary: #6c757d;\n            --border-color: #e9ecef;\n            --success-color: #4cc9f0;\n            --error-color: #f72585;\n            --warning-color: #f9c74f;\n        }\n\n        * {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n        }\n\n        body {\n            background-image: url(${e.IMG});\n            background-size: cover;\n            background-position: center;\n            background-attachment: fixed;\n            background-color: var(--bg-color);\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            line-height: 1.6;\n            color: var(--text-primary);\n            min-height: 100vh;\n            display: flex;\n            justify-content: center;\n            padding: 20px;\n            align-items: center;\n            position: relative; \n        }\n\n        .container {\n            position: relative;\n            background: rgba(255, 255, 255, 0.7);\n            backdrop-filter: blur(15px);\n            -webkit-backdrop-filter: blur(15px);\n            max-width: 600px;\n            width: 100%;\n            padding: 1.5rem;\n            border-radius: 24px;\n            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.08),\n                inset 0 0 0 1px rgba(255, 255, 255, 0.5);\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n            z-index: 1;\n            margin-top: 40px;\n        }\n\n        .container:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.12),\n                inset 0 0 0 1px rgba(255, 255, 255, 0.8);\n        }\n\n        h1 {\n            text-align: center;\n            color: var(--primary-color);\n            margin-bottom: 0.5rem;\n            font-size: 2rem;\n            font-weight: 700;\n            letter-spacing: -0.5px;\n            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));\n            -webkit-background-clip: text;\n            background-clip: text;\n            color: transparent;\n        }\n\n        .input-group {\n            margin-bottom: 0.5rem;\n        }\n\n        .link-input {\n            flex: 1;\n            min-width: 0;\n            margin-top: 0;\n            padding: 12px 16px;\n            border: 2px solid var(--border-color);\n            border-radius: 12px;\n            font-size: 1rem;\n            transition: all 0.3s ease;\n            box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.03);\n            background-color: white;\n        }\n\n        .link-row {\n            display: flex;\n            align-items: center;\n            position: relative;\n            margin-bottom: 12px;\n            gap: 12px;\n        }\n\n        .add-btn {\n            flex-shrink: 0;\n            width: 42px;\n            height: 42px;\n            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            color: white;\n            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);\n            border: none;\n            font-size: 1.2rem;\n        }\n\n        .add-btn:hover {\n            transform: scale(1.1);\n            box-shadow: 0 6px 16px rgba(67, 97, 238, 0.4);\n        }\n\n        label {\n            display: block;\n            margin-bottom: 0.5rem;\n            color: var(--text-secondary);\n            font-weight: 500;\n            font-size: 0.95rem;\n        }\n\n        input {\n            width: 100%;\n            padding: 12px 16px;\n            border: 2px solid var(--border-color);\n            border-radius: 12px;\n            font-size: 1rem;\n            transition: all 0.3s ease;\n            box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.03);\n            background-color: white;\n        }\n\n        input:focus {\n            outline: none;\n            border-color: var(--primary-color);\n            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15),\n                inset 0 2px 4px rgba(0, 0, 0, 0.03);\n        }\n\n        button {\n            width: 100%;\n            padding: 14px 24px;\n            background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));\n            color: white;\n            border: none;\n            border-radius: 12px;\n            font-size: 1rem;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            margin-bottom: 0.5rem;\n            position: relative;\n            overflow: hidden;\n            box-shadow: 0 6px 16px rgba(67, 97, 238, 0.3);\n        }\n\n        button::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n            transition: all 0.6s ease;\n        }\n\n        button:hover {\n            transform: translateY(-3px);\n            box-shadow: 0 8px 20px rgba(67, 97, 238, 0.4);\n        }\n\n        button:hover::before {\n            left: 100%;\n        }\n\n        button:active {\n            transform: translateY(-1px);\n            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);\n        }\n\n        #result {\n            background-color: #f8f9fa;\n            font-family: monospace;\n            word-break: break-all;\n            padding: 14px 16px !important;\n            border: 2px solid var(--border-color);\n            border-radius: 12px;\n            position: relative;\n            transition: all 0.3s ease;\n        }\n\n        #result:hover {\n            border-color: var(--primary-color);\n            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.1);\n        }\n\n        .github-corner {\n            position: absolute;\n            top: 0;\n            right: 0;\n            z-index: 1000; /* \u786E\u4FDD GitHub \u89D2\u6807\u59CB\u7EC8\u5728\u6700\u4E0A\u5C42 */\n        }\n\n        .github-corner svg {\n            fill: var(--primary-color);\n            color: var(--card-bg);\n            position: absolute;\n            top: 0;\n            right: 0;\n            border: 0;\n            width: 80px;\n            height: 80px;\n            transition: transform 0.3s ease;\n        }\n\n        .github-corner:hover svg {\n            transform: scale(1.1);\n        }\n\n        .github-corner:hover .octo-arm {\n            animation: octocat-wave 560ms ease-in-out;\n        }\n\n        @keyframes octocat-wave {\n            0%, 100% { transform: rotate(0); }\n            20%, 60% { transform: rotate(-25deg); }\n            40%, 80% { transform: rotate(10deg); }\n        }\n\n        .logo-title {\n            position: relative;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            margin-bottom: 0.5rem;\n            padding-bottom: 0.5rem;\n            border-bottom: 1px solid var(--border-color);\n        }\n\n        .beian-info {\n            text-align: center;\n            font-size: 13px;\n            color: var(--text-secondary);\n            margin-top: 0.5rem;\n            padding-top: 0.5rem;\n            border-top: 1px solid var(--border-color);\n        }\n\n        .beian-info a {\n            color: var(--primary-color);\n            text-decoration: none;\n            border-bottom: 1px dashed var(--primary-color);\n            padding-bottom: 2px;\n            transition: all 0.3s ease;\n        }\n\n        .beian-info a:hover {\n            border-bottom-style: solid;\n            color: var(--primary-dark);\n        }\n\n        #qrcode {\n            display: none;\n            justify-content: center;\n            align-items: center;\n            margin-top: 20px;\n            padding: 15px;\n            background: white;\n            border-radius: 12px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n        }\n\n        #qrcode.show {\n            display: flex; /* \u6709\u5185\u5BB9\u65F6\u663E\u793A */\n        }\n        \n        .template-selector {\n            position: relative;\n            margin-bottom: 0.5rem;\n        }\n        \n        .template-toggle {\n            padding: 14px 16px;\n            background-color: rgba(67, 97, 238, 0.08);\n            font-weight: 600;\n            cursor: pointer;\n            border-radius: 12px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            transition: all 0.3s ease;\n            border: 2px solid transparent;\n        }\n        \n        .template-toggle:hover {\n            background-color: rgba(67, 97, 238, 0.15);\n            border-color: rgba(67, 97, 238, 0.2);\n        }\n        \n        .template-toggle:after {\n            content: \"\u25B6\";\n            font-size: 12px;\n            transition: transform 0.3s ease;\n            margin-left: 8px;\n        }\n        \n        .template-toggle.collapsed:after {\n            transform: rotate(90deg);\n        }\n        \n        .template-options {\n            position: absolute;\n            top: 100%;\n            left: 0;\n            width: 100%;\n            z-index: 1000;\n            background-color: white;\n            border-radius: 0 0 12px 12px;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n            display: none;\n            max-height: 250px;\n            overflow-y: auto;\n            border: 2px solid var(--border-color);\n            border-top: none;\n            transition: all 0.3s ease;\n        }\n        \n        .template-options.show {\n            display: block;\n            animation: slideDown 0.3s ease-out;\n        }\n        \n        @keyframes slideDown {\n            from {\n                opacity: 0;\n                transform: translateY(-10px);\n            }\n            to {\n                opacity: 1;\n                transform: translateY(0);\n            }\n        }\n        \n        .template-option {\n            padding: 12px 20px;\n            cursor: pointer;\n            transition: all 0.2s ease;\n            border-bottom: 1px solid var(--border-color);\n            font-size: 0.95rem;\n        }\n        \n        .template-option:last-child {\n            border-bottom: none;\n        }\n        \n        .template-option:hover {\n            background-color: rgba(67, 97, 238, 0.1);\n            padding-left: 24px;\n        }\n        \n        .template-option.selected {\n            background-color: rgba(67, 97, 238, 0.15);\n            font-weight: 600;\n            color: var(--primary-dark);\n        }\n\n        .config-toggle {\n            display: flex;\n            justify-content: center;\n            margin-bottom: 0.5rem;\n            background: rgba(67, 97, 238, 0.08);\n            border-radius: 12px;\n            padding: 6px;\n            border: 2px solid transparent;\n        }\n\n        .toggle-option {\n            padding: 10px 20px;\n            border-radius: 10px;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            font-weight: 600;\n            text-align: center;\n            flex: 1;\n            position: relative;\n            overflow: hidden;\n            font-size: 0.95rem;\n        }\n\n        .toggle-option.active {\n            background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));\n            color: white;\n            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);\n        }\n\n        .toggle-option:not(.active):hover {\n            background-color: rgba(67, 97, 238, 0.15);\n            transform: translateY(-1px);\n        }\n\n        .mode-options {\n            display: none;\n            opacity: 0;\n            transition: opacity 0.3s ease;\n        }\n\n        .mode-options.active {\n            display: block;\n            opacity: 1;\n            animation: fadeIn 0.3s ease-out;\n        }\n\n        @keyframes fadeIn {\n            from {\n                opacity: 0;\n                transform: translateY(10px);\n            }\n            to {\n                opacity: 1;\n                transform: translateY(0);\n            }\n        }\n\n        .tip-icon {\n            display: inline-flex;\n            justify-content: center;\n            align-items: center;\n            width: 20px;\n            height: 20px;\n            border-radius: 50%;\n            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));\n            color: white;\n            font-weight: bold;\n            font-size: 12px;\n            cursor: pointer;\n            user-select: none;\n            transition: all 0.3s ease;\n            box-shadow: 0 2px 6px rgba(67, 97, 238, 0.3);\n        }\n\n        .tip-icon:hover {\n            transform: scale(1.1);\n            box-shadow: 0 3px 8px rgba(67, 97, 238, 0.4);\n        }\n\n        .tip-wrapper {\n            position: relative;\n            display: inline-block;\n        }\n\n        .tip-panel {\n            opacity: 0;\n            visibility: hidden;\n            position: absolute;\n            top: 28px;\n            left: 0;\n            min-width: 280px;\n            max-width: 340px;\n            max-height: 50vh;\n            background: white;\n            color: var(--text-primary);\n            font-size: 14px;\n            border-radius: 12px;\n            padding: 16px;\n            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);\n            z-index: 1000;\n            white-space: normal;\n            line-height: 1.6;\n            overflow-y: auto;\n            overflow-x: hidden;\n            word-break: break-word;\n            transition: all 0.3s ease;\n            border: 2px solid var(--border-color);\n        }\n\n        .tip-panel::before {\n            content: '';\n            position: absolute;\n            top: -10px;\n            left: 10px;\n            width: 20px;\n            height: 20px;\n            background: white;\n            transform: rotate(45deg);\n            border-top: 2px solid var(--border-color);\n            border-left: 2px solid var(--border-color);\n        }\n\n        .tip-panel ul {\n            margin: 8px 0;\n            padding-left: 20px;\n            list-style-type: disc;\n        }\n\n        .tip-panel li {\n            margin-bottom: 6px;\n        }\n\n        .tip-panel strong, .tip-panel b {\n            font-weight: bold;\n            color: var(--primary-color);\n            display: block;\n            margin-top: 10px;\n        }\n\n        .tip-wrapper.active .tip-panel {\n            opacity: 1;\n            visibility: visible;\n        }\n\n        .protocol-options {\n            display: flex;\n            gap: 1px;\n            margin-top: 12px;\n            flex-wrap: wrap;\n        }\n\n        .protocol-checkbox {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            cursor: pointer;\n            user-select: none;\n            transition: all 0.3s ease;\n            padding: 8px 12px;\n            border-radius: 8px;\n        }\n\n        .protocol-checkbox:hover {\n            background-color: rgba(67, 97, 238, 0.08);\n        }\n\n        .protocol-checkbox input {\n            width: auto;\n            margin: 0;\n            cursor: pointer;\n        }\n\n        /* \u54CD\u5E94\u5F0F\u8BBE\u8BA1 */\n        @media (max-width: 768px) {\n            .container {\n                padding: 1.5rem;\n                margin: 10px;\n                border-radius: 20px;\n            }\n            \n            h1 {\n                font-size: 1.8rem;\n            }\n            \n            .toggle-option {\n                padding: 8px 12px;\n                font-size: 0.9rem;\n            }\n            \n            .protocol-options {\n                gap: 1px;\n            }\n        }\n\n        @media (max-width: 480px) {\n            body {\n                padding: 10px;\n            }\n            \n            .container {\n                padding: 1.5rem;\n                border-radius: 16px;\n            }\n            \n            h1 {\n                font-size: 1.6rem;\n            }\n            \n            .link-input {\n                padding: 10px 12px;\n                font-size: 0.9rem;\n            }\n            \n            .add-btn {\n                width: 38px;\n                height: 38px;\n                font-size: 1rem;\n            }\n            \n            button {\n                padding: 12px 20px;\n                font-size: 0.95rem;\n            }\n        }\n`;\nexport default CSS;\n", "import CSS from './css.js';\n\nexport async function getFakePage(e) {\n    return `\n<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"icon\" type=\"image/png\" href=\"https://cdn.jsdelivr.net/gh/Kwisma/cf-worker-mihomo@main/favicon.png\">\n    <title>\u914D\u7F6E\u8F6C\u6362\u5DE5\u5177</title>\n    <style>${CSS(e)}</style>\n    <script src=\"https://cdn.jsdelivr.net/npm/@keeex/qrcodejs-kx@1.0.2/qrcode.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/marked/marked.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/dompurify@3.0.5/dist/purify.min.js\"></script>\n</head>\n\n<body>\n    <a href=\"${atob('aHR0cHM6Ly9naXRodWIuY29tL0t3aXNtYS9jZi13b3JrZXItbWlob21v')}\" target=\"_blank\" class=\"github-corner\"\n        aria-label=\"View source on Github\">\n        <svg viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n            <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n            <path\n                d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n                fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"></path>\n            <path\n                d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n                fill=\"currentColor\" class=\"octo-body\"></path>\n        </svg>\n    </a>\n    <div class=\"container\">\n        <div class=\"logo-title\">\n            <h1>\u914D\u7F6E\u8F6C\u6362\u5DE5\u5177</h1>\n        </div>\n        <div class=\"config-toggle\" id=\"mode-toggle\">\n            <!-- \u6A21\u5F0F\u5207\u6362\u6309\u94AE\u5C06\u901A\u8FC7JavaScript\u52A8\u6001\u751F\u6210 -->\n        </div>\n        \n        <div id=\"mode-containers\">\n            <!-- \u5404\u6A21\u5F0F\u5BB9\u5668\u5C06\u901A\u8FC7JavaScript\u52A8\u6001\u751F\u6210 -->\n        </div>\n\n        <div class=\"input-group\">\n            <div style=\"display: flex; flex-direction: column; align-items: flex-start;\">\n                <label for=\"result\">\u8BA2\u9605\u5730\u5740\uFF1A</label>\n            </div>\n            <input type=\"text\" id=\"result\" readonly onclick=\"copyToClipboard()\">\n            <label id=\"qrcode\" style=\"margin: 15px 10px -15px 10px;\"></label>\n        </div>\n        <div class=\"beian-info\" style=\"text-align: center; font-size: 13px;\">\n            <a href='${e.beianurl}'>${e.beian}</a>\n        </div>\n    </div>\n\n    <script>\n        // \u914D\u7F6E\u6A21\u5F0F\u5B9A\u4E49\n        const MODES = ${e.modes};\n\n        // \u5F53\u524D\u6FC0\u6D3B\u7684\u6A21\u5F0F\n        let activeMode = 'mihomo';\n        \n        // \u521D\u59CB\u5316\u5E94\u7528\n        document.addEventListener('DOMContentLoaded', function () {\n            initModeToggle();\n            initModeContainers();\n            setActiveMode(activeMode);\n            \n            // \u521D\u59CB\u5316\u63D0\u793A\u7CFB\u7EDF\n            initTipSystem();\n            \n            // \u521D\u59CB\u5316\u6A21\u677F\u9009\u62E9\u5668\n            initAllTemplateSelectors();\n        });\n\n        // \u521D\u59CB\u5316\u6A21\u5F0F\u5207\u6362\u6309\u94AE\n        function initModeToggle() {\n            const modeToggle = document.getElementById('mode-toggle');\n            \n            for (const [modeId, modeConfig] of Object.entries(MODES)) {\n                const option = document.createElement('div');\n                option.className = 'toggle-option';\n                option.dataset.mode = modeId;\n                option.textContent = modeConfig.name;\n                \n                option.addEventListener('click', function() {\n                    setActiveMode(modeId);\n                });\n                \n                modeToggle.appendChild(option);\n            }\n        }\n\n        // \u521D\u59CB\u5316\u6A21\u5F0F\u5BB9\u5668\n        function initModeContainers() {\n            const modeContainers = document.getElementById('mode-containers');\n            const configs = ${e.configs};\n            \n            for (const [modeId, modeConfig] of Object.entries(MODES)) {\n                const container = document.createElement('div');\n                container.id = \\`\\${modeId}-container\\`;\n                container.className = 'mode-options';\n                \n                // \u6A21\u677F\u9009\u62E9\u5668\n                if (!modeConfig.noTemplate) {\n                    const templateSelector = document.createElement('div');\n                    templateSelector.className = 'template-selector';\n                    templateSelector.innerHTML = \\`\n                        <div class=\"template-toggle collapsed\">\u9009\u62E9\u914D\u7F6E\u6A21\u677F(\u672A\u9009\u62E9)</div>\n                        <div class=\"template-options\"></div>\n                    \\`;\n                    container.appendChild(templateSelector);\n                }\n                // \u8F93\u5165\u7EC4\n                const inputGroup = document.createElement('div');\n                inputGroup.className = 'input-group';\n                \n                const linkLabel = document.createElement('div');\n                linkLabel.style.cssText = 'display: flex; align-items: center; gap: 6px; margin-bottom: 6px;';\n                linkLabel.innerHTML = \\`\n                    <label for=\"link\" style=\"margin: 0;\">\u8BA2\u9605\u94FE\u63A5</label>\n                    <div class=\"tip-wrapper\">\n                        <span class=\"tip-icon\" data-mode=\"\\${modeId}\">!</span>\n                        <div class=\"tip-panel\"></div>\n                    </div>\n                \\`;\n                inputGroup.appendChild(linkLabel);\n                \n                const linkContainer = document.createElement('div');\n                linkContainer.id = \\`link-container-\\${modeId}\\`;\n                linkContainer.innerHTML = \\`\n                    <div class=\"link-row\">\n                        <input type=\"text\" class=\"link-input\" placeholder=\"\\${modeConfig.placeholder}\" />\n                        <div class=\"add-btn\" onclick=\"addLinkInput(this, '\\${modeId}')\">\u2795</div>\n                    </div>\n                \\`;\n                inputGroup.appendChild(linkContainer);\n                \n                // \u534F\u8BAE\u9009\u9879\n                if (!modeConfig.noTemplate) {\n                    const protocolLabel = document.createElement('label');\n                    protocolLabel.textContent = '\u9644\u52A0\u53C2\u6570\u9009\u9879';\n                    inputGroup.appendChild(protocolLabel);\n                    \n                    const protocolOptions = document.createElement('div');\n                    protocolOptions.className = 'protocol-options';\n                    \n                    modeConfig.protocolOptions.forEach(option => {\n                        const label = document.createElement('label');\n                        label.className = 'protocol-checkbox';\n                        label.innerHTML = \\`\n                            <input type=\"checkbox\" name=\"protocol\" value=\"\\${option.value}\" \\${option.checked ? 'checked' : ''}>\n                            \\${option.label}\n                        \\`;\n                        protocolOptions.appendChild(label);\n                    });\n                    \n                    inputGroup.appendChild(protocolOptions);\n                }\n                container.appendChild(inputGroup);\n                \n                // \u751F\u6210\u6309\u94AE\n                const generateButton = document.createElement('button');\n                generateButton.textContent = \\`\u751F\u6210\\${modeConfig.name}\u914D\u7F6E\\`;\n                generateButton.onclick = function() { generateConfig(modeId); copyToClipboard(); };\n                container.appendChild(generateButton);\n                \n                modeContainers.appendChild(container);\n            }\n        }\n\n        // \u8BBE\u7F6E\u6D3B\u52A8\u6A21\u5F0F\n        function setActiveMode(modeId) {\n            // \u66F4\u65B0\u5207\u6362\u6309\u94AE\u72B6\u6001\n            document.querySelectorAll('.toggle-option').forEach(option => {\n                option.classList.toggle('active', option.dataset.mode === modeId);\n            });\n            \n            // \u66F4\u65B0\u6A21\u5F0F\u5BB9\u5668\u663E\u793A\u72B6\u6001\n            document.querySelectorAll('.mode-options').forEach(container => {\n                container.classList.toggle('active', container.id === \\`\\${modeId}-container\\`);\n            });\n            \n            // \u66F4\u65B0\u9875\u9762\u6807\u9898\u548C\u9876\u90E8\u6587\u5B57\n            const modeName = MODES[modeId].name || '';\n            document.title = modeName ? \\`\\${modeName}\u914D\u7F6E\u8F6C\u6362\u5DE5\u5177\\` : '\u914D\u7F6E\u8F6C\u6362\u5DE5\u5177';\n            const h1Element = document.querySelector('h1');\n            if (h1Element) {\n                h1Element.textContent = modeName ? \\`\\${modeName}\u914D\u7F6E\u8F6C\u6362\u5DE5\u5177\\` : '\u914D\u7F6E\u8F6C\u6362\u5DE5\u5177';\n            }\n            updateResult('');\n            activeMode = modeId;\n        }\n\n        // \u521D\u59CB\u5316\u63D0\u793A\u7CFB\u7EDF\n        function initTipSystem() {\n            // \u5F39\u7A97\u63D0\u793A\n            document.querySelectorAll('.tip-icon').forEach(icon => {\n                icon.addEventListener('click', (e) => {\n                    e.stopPropagation();\n                    \n                    // \u5173\u95ED\u6240\u6709\u5DF2\u5C55\u5F00\n                    document.querySelectorAll('.tip-wrapper').forEach(w => w.classList.remove('active'));\n                    \n                    const wrapper = icon.closest('.tip-wrapper');\n                    wrapper.classList.toggle('active');\n                    \n                    const panel = wrapper.querySelector('.tip-panel');\n                    const mode = icon.dataset.mode;\n                    \n                    // \u4F7F\u7528 marked \u6E32\u67D3 Markdown \u4E3A HTML\n                    const rawMarkdown = MODES[mode].tipText || '\u6682\u65E0\u63D0\u793A\u5185\u5BB9';\n                    panel.innerHTML = DOMPurify.sanitize(marked.parse(rawMarkdown));\n                });\n            });\n            \n            // \u70B9\u51FB\u9875\u9762\u5176\u4ED6\u5730\u65B9\u5173\u95ED\u63D0\u793A\n            document.addEventListener('click', () => {\n                document.querySelectorAll('.tip-wrapper').forEach(w => w.classList.remove('active'));\n            });\n        }\n\n        // \u521D\u59CB\u5316\u6240\u6709\u6A21\u677F\u9009\u62E9\u5668\n        function initAllTemplateSelectors() {\n            const configs = ${e.configs};\n            \n            for (const modeId of Object.keys(MODES)) {\n                if (!MODES[modeId].noTemplate && configs[modeId]) {\n                    initTemplateSelector(modeId, configs[modeId]);\n                }\n            }\n        }\n\n        // \u521D\u59CB\u5316\u6A21\u677F\u9009\u62E9\u5668\n        function initTemplateSelector(modeId, configGroups) {\n            const selector = document.querySelector(\\`#\\${modeId}-container .template-selector\\`);\n            const templateToggle = selector.querySelector('.template-toggle');\n            const optionsContainer = selector.querySelector('.template-options');\n            \n            // \u751F\u6210\u6240\u6709\u6A21\u677F\u9009\u9879\n            configGroups.forEach(group => {\n                // \u6DFB\u52A0\u5206\u7EC4\u6807\u7B7E\n                const groupLabel = document.createElement('div');\n                groupLabel.style.padding = '10px 20px';\n                groupLabel.style.fontWeight = 'bold';\n                groupLabel.style.color = '#555';\n                groupLabel.style.backgroundColor = '#f5f5f5';\n                groupLabel.textContent = group.label;\n                optionsContainer.appendChild(groupLabel);\n                \n                // \u6DFB\u52A0\u9009\u9879\n                group.options.forEach(option => {\n                    const optionElement = document.createElement('div');\n                    optionElement.className = 'template-option';\n                    optionElement.textContent = option.label;\n                    optionElement.dataset.value = option.value;\n                    optionElement.dataset.group = group.label;\n                    \n                    optionElement.addEventListener('click', function () {\n                        // \u79FB\u9664\u4E4B\u524D\u9009\u4E2D\u7684\u6837\u5F0F\n                        selector.querySelectorAll('.template-option.selected').forEach(item => {\n                            item.classList.remove('selected');\n                        });\n                        \n                        // \u66F4\u65B0\u663E\u793A\u6587\u672C\n                        templateToggle.textContent = \\`\\${group.label}-\\${option.label}\\`;\n                        \n                        // \u6DFB\u52A0\u9009\u4E2D\u6837\u5F0F\n                        this.classList.add('selected');\n                        \n                        // \u70B9\u51FB\u540E\u81EA\u52A8\u6298\u53E0\u9009\u9879\u9762\u677F\n                        templateToggle.classList.add('collapsed');\n                        optionsContainer.classList.remove('show');\n                    });\n                    \n                    optionsContainer.appendChild(optionElement);\n                });\n            });\n            \n            // \u9ED8\u8BA4\u9009\u62E9\u7B2C\u4E00\u4E2A\u9009\u9879\n            const firstOption = selector.querySelector('.template-option');\n            if (firstOption) {\n                firstOption.classList.add('selected');\n                const groupLabel = firstOption.dataset.group;\n                const optionLabel = firstOption.textContent;\n                templateToggle.textContent = \\`\u8BF7\u9009\u62E9\u914D\u7F6E\u6A21\u677F(\u9ED8\u8BA4-\\${groupLabel})\\`;\n            }\n            \n            // \u70B9\u51FB\u5207\u6362\u6309\u94AE\u5C55\u5F00/\u6298\u53E0\u9009\u9879\n            templateToggle.addEventListener('click', function () {\n                this.classList.toggle('collapsed');\n                optionsContainer.classList.toggle('show');\n            });\n            \n            // \u70B9\u51FB\u9875\u9762\u5176\u4ED6\u533A\u57DF\u5173\u95ED\u9009\u9879\u9762\u677F\n            document.addEventListener('click', function (event) {\n                if (!templateToggle.contains(event.target) && !optionsContainer.contains(event.target)) {\n                    templateToggle.classList.add('collapsed');\n                    optionsContainer.classList.remove('show');\n                }\n            });\n        }\n\n        // \u6DFB\u52A0\u94FE\u63A5\u8F93\u5165\u6846\n        function addLinkInput(button, modeId) {\n            const container = document.getElementById(\\`link-container-\\${modeId}\\`);\n            const row = document.createElement('div');\n            row.className = 'link-row';\n            \n            const input = document.createElement('input');\n            input.type = 'text';\n            input.className = 'link-input';\n            input.placeholder = MODES[modeId].placeholder;\n            \n            button.style.display = 'none';\n            row.appendChild(input);\n            container.appendChild(row);\n            \n            const btn = document.createElement('div');\n            btn.className = 'add-btn';\n            btn.textContent = '\u2795';\n            btn.onclick = function () {\n                addLinkInput(btn, modeId);\n            };\n            \n            row.appendChild(btn);\n        }\n\n        // \u751F\u6210\u914D\u7F6E\n        function generateConfig(modeId) {\n            const inputs = document.querySelectorAll(\\`#\\${modeId}-container .link-input\\`);\n            let templateLink = '';\n            \n            // \u53EA\u6709\u975Ev2ray\u6A21\u5F0F\u624D\u83B7\u53D6\u9009\u4E2D\u7684\u6A21\u677F\n            if (!MODES[modeId].noTemplate) {\n                const selectedOption = document.querySelector(\\`#\\${modeId}-container .template-option.selected\\`);\n                templateLink = selectedOption ? selectedOption.dataset.value : '';\n            }\n            const protocolParams = {};\n            \n            document.querySelectorAll(\\`#\\${modeId}-container .protocol-options input[type=\"checkbox\"]\\`).forEach(checkbox => {\n                protocolParams[checkbox.value] = checkbox.checked;\n            });\n            \n            const subscriptionLinks = Array.from(inputs)\n                .map(input => input.value.trim())\n                .filter(val => val !== '');\n            \n            if (subscriptionLinks.length === 0 && templateLink) {\n                alert('\u8BF7\u8F93\u5165\u81F3\u5C11\u4E00\u4E2A\u8BA2\u9605\u94FE\u63A5');\n                return;\n            }\n            \n            const allLinks = subscriptionLinks.map(link => encodeURIComponent(link));\n            const origin = window.location.origin;\n\n            const params = [];\n\n            if (templateLink) {\n                params.push(\\`template=\\${encodeURIComponent(templateLink)}\\`);\n            }\n            if (allLinks.length > 0) {\n                params.push(\\`url=\\${allLinks.join(',')}\\`);\n            }\n            if (modeId) {\n                params.push(\\`\\${modeId}=true\\`);\n            }\n\n            for (const [protocol, enabled] of Object.entries(protocolParams)) {\n                if (enabled) {\n                    params.push(\\`\\${protocol}=true\\`);\n                }\n            }\n\n            const urlLink = \\`\\${origin}/?\\${params.join('&')}\\`;\n            updateResult(urlLink);\n        }\n\n        // \u590D\u5236\u5230\u526A\u8D34\u677F\n        function copyToClipboard() {\n            const resultInput = document.getElementById('result');\n            if (!resultInput.value) {\n                return;\n            }\n            \n            resultInput.select();\n            navigator.clipboard.writeText(resultInput.value).then(() => {\n                const tooltip = document.createElement('div');\n                tooltip.style.position = 'fixed';\n                tooltip.style.left = '50%';\n                tooltip.style.top = '20px';\n                tooltip.style.transform = 'translateX(-50%)';\n                tooltip.style.padding = '8px 16px';\n                tooltip.style.background = '#4361ee';\n                tooltip.style.color = 'white';\n                tooltip.style.borderRadius = '4px';\n                tooltip.style.zIndex = '1000';\n                tooltip.textContent = '\u5DF2\u590D\u5236\u5230\u526A\u8D34\u677F';\n                \n                document.body.appendChild(tooltip);\n                \n                setTimeout(() => {\n                    document.body.removeChild(tooltip);\n                }, 2000);\n            }).catch(err => {\n                alert('\u590D\u5236\u5931\u8D25\uFF0C\u8BF7\u624B\u52A8\u590D\u5236');\n            });\n        }\n\n        // \u66F4\u65B0\u7ED3\u679C\u548C\u4E8C\u7EF4\u7801\n        function updateResult(urlLink) {\n            document.getElementById('result').value = urlLink;\n            \n            // \u751F\u6210\u4E8C\u7EF4\u7801\n            const qrcodeDiv = document.getElementById('qrcode');\n            \n            if (urlLink) {\n                // \u6709\u5185\u5BB9\u65F6\u663E\u793A\u4E8C\u7EF4\u7801\n                qrcodeDiv.classList.add('show');\n                qrcodeDiv.innerHTML = '';\n                new QRCode(qrcodeDiv, {\n                    text: urlLink,\n                    width: 220,\n                    height: 220,\n                    colorDark: \"#4a60ea\",\n                    colorLight: \"#ffffff\",\n                    correctLevel: QRCode.CorrectLevel.L,\n                    scale: 1\n                });\n            } else {\n                // \u65E0\u5185\u5BB9\u65F6\u9690\u85CF\u4E8C\u7EF4\u7801\n                qrcodeDiv.classList.remove('show');\n                qrcodeDiv.innerHTML = '';\n            }\n        }\n        document.addEventListener('DOMContentLoaded', function() {\n            document.getElementById('qrcode').classList.remove('show');\n        });\n    </script>\n</body>\n</html>`;\n}\n", "import { getmihomo_config } from './mihomo.js';\nimport { getsingbox_config } from './singbox.js';\nimport { getv2ray_config } from './v2ray.js';\nimport { getFakePage } from './page.js';\nimport * as utils from './utils.js';\nexport default async function handler(req, res) {\n    const url = new URL(req.url, `http://${req.headers.host}`);\n    const e = {\n        url,\n        urls: url.searchParams.getAll('url'),\n        userAgent: req.headers['user-agent'],\n        rule: url.searchParams.get('template'),\n        singbox: url.searchParams.get('singbox') === 'true',\n        mihomo: url.searchParams.get('mihomo') === 'true',\n        v2ray: url.searchParams.get('v2ray') === 'true',\n        udp: url.searchParams.get('udp') === 'true',\n        udp_fragment: url.searchParams.get('udp_frag') === 'true',\n        tls_fragment: url.searchParams.get('tls_frag') === 'true',\n        exclude_package: url.searchParams.get('ep') === 'true',\n        exclude_address: url.searchParams.get('ea') === 'true',\n        tailscale: url.searchParams.get('tailscale') === 'true',\n        adgdns: url.searchParams.get('adgdns') === 'true',\n        tun: url.searchParams.get('tun') === 'true',\n        IMG: process.env.IMG || utils.backimg,\n        sub: process.env.SUB || utils.subapi,\n        Mihomo_default: process.env.MIHOMOTOP || utils.mihomo_top,\n        singbox_1_11: process.env.SINGBOX_1_11 || utils.singbox_1_11,\n        singbox_1_12: process.env.SINGBOX_1_12 || utils.singbox_1_12,\n        singbox_1_12_alpha: process.env.SINGBOX_1_12_ALPHA || utils.singbox_1_12_alpha,\n        singbox_1_13: process.env.SINGBOX_1_13 || utils.singbox_1_13,\n        beian: process.env.BEIAN || utils.beiantext,\n        beianurl: process.env.BEIANURL || utils.beiandizi,\n        configs: utils.configs(process.env.MIHOMO, process.env.SINGBOX),\n    };\n    e.modes = utils.modes(e.sub, e.userAgent);\n    if (e.urls.length === 1 && e.urls[0].includes(',')) {\n        e.urls = e.urls[0].split(',').map((u) => u.trim());\n    }\n\n    if (e.urls.length === 0 || e.urls[0] === '') {\n        const html = await getFakePage(e);\n        res.setHeader('Content-Type', 'text/html; charset=utf-8');\n        res.statusCode = 200;\n        res.end(html);\n        return;\n    }\n\n    try {\n        let result;\n        if (e.singbox) {\n            result = await getsingbox_config(e);\n        } else if (e.mihomo) {\n            result = await getmihomo_config(e);\n        } else if (e.v2ray) {\n            result = await getv2ray_config(e);\n        }\n\n        const rawHeaders = result.headers;\n        const headersToIgnore = ['transfer-encoding', 'content-length', 'content-encoding', 'connection'];\n\n        for (const [key, value] of Object.entries(rawHeaders)) {\n            if (!headersToIgnore.includes(key.toLowerCase())) {\n                res.setHeader(key, value);\n            }\n        }\n\n        res.setHeader('Content-Type', 'application/json; charset=utf-8');\n        res.setHeader('Profile-web-page-url', url.origin);\n        res.statusCode = result.status || 200;\n        res.end(result.data);\n    } catch (err) {\n        res.statusCode = 400;\n        res.setHeader('Content-Type', 'application/json; charset=utf-8');\n        res.end(JSON.stringify({ error: err.message }));\n    }\n}\n"],
  "mappings": "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",
  "names": ["dist_exports", "__export", "Alias", "cst_exports", "Composer", "Document", "Lexer", "LineCounter", "Pair", "Parser", "Scalar", "Schema", "YAMLError", "YAMLMap", "YAMLParseError", "YAMLSeq", "YAMLWarning", "isAlias", "isCollection", "isDocument", "isMap", "isNode", "isPair", "isScalar", "isSeq", "parse", "parseAllDocuments", "parseDocument", "stringify", "visit", "visitAsync", "ALIAS", "DOC", "MAP", "PAIR", "SCALAR", "SEQ", "NODE_TYPE", "isAlias", "node", "isDocument", "isMap", "isPair", "isScalar", "isSeq", "isCollection", "isNode", "hasAnchor", "BREAK", "SKIP", "REMOVE", "visit", "node", "visitor", "visitor_", "initVisitor", "isDocument", "visit_", "key", "path", "ctrl", "callVisitor", "isNode", "isPair", "replaceNode", "isCollection", "i", "ci", "ck", "cv", "visitAsync", "visitAsync_", "isMap", "isSeq", "isScalar", "isAlias", "parent", "pt", "escapeChars", "escapeTagName", "tn", "ch", "Directives", "_Directives", "yaml", "tags", "copy", "res", "line", "onError", "parts", "name", "handle", "prefix", "version", "isValid", "source", "verbatim", "suffix", "error", "tag", "doc", "lines", "tagEntries", "tagNames", "isNode", "visit", "_key", "node", "anchorIsValid", "anchor", "msg", "anchorNames", "root", "anchors", "visit", "_key", "node", "findNewAnchor", "prefix", "exclude", "i", "name", "createNodeAnchors", "doc", "aliasObjects", "sourceObjects", "prevAnchors", "source", "ref", "isScalar", "isCollection", "error", "applyReviver", "reviver", "obj", "key", "val", "len", "v0", "v1", "k", "toJS", "value", "arg", "ctx", "v", "hasAnchor", "data", "res", "NodeBase", "type", "NODE_TYPE", "copy", "doc", "mapAsMap", "maxAliasCount", "onAnchor", "reviver", "isDocument", "ctx", "res", "toJS", "count", "applyReviver", "Alias", "NodeBase", "source", "ALIAS", "doc", "ctx", "nodes", "visit", "_key", "node", "isAlias", "hasAnchor", "found", "_arg", "anchors", "maxAliasCount", "msg", "data", "toJS", "getAliasCount", "_onComment", "_onChompKeep", "src", "anchorIsValid", "anchor", "isCollection", "count", "item", "c", "isPair", "kc", "vc", "isScalarValue", "value", "Scalar", "NodeBase", "SCALAR", "arg", "ctx", "toJS", "defaultTagPrefix", "findTagObject", "value", "tagName", "tags", "match", "t", "tagObj", "createNode", "ctx", "isDocument", "isNode", "isPair", "map", "MAP", "aliasDuplicateObjects", "onAnchor", "onTagObj", "schema", "sourceObjects", "ref", "Alias", "node", "Scalar", "SEQ", "collectionFromPath", "schema", "path", "value", "v", "k", "a", "createNode", "isEmptyPath", "Collection", "NodeBase", "type", "copy", "it", "isNode", "isPair", "key", "rest", "node", "isCollection", "keepScalar", "isScalar", "allowScalar", "stringifyComment", "str", "indentComment", "comment", "indent", "lineComment", "FOLD_FLOW", "FOLD_BLOCK", "FOLD_QUOTED", "foldFlowLines", "text", "indent", "mode", "indentAtStart", "lineWidth", "minContentWidth", "onFold", "onOverflow", "endStep", "folds", "escapedFolds", "end", "split", "prev", "overflow", "i", "escStart", "escEnd", "consumeMoreIndentedLines", "ch", "next", "j", "res", "fold", "start", "getFoldOptions", "ctx", "isBlock", "containsDocumentMarker", "str", "lineLengthOverLimit", "lineWidth", "indentLength", "limit", "strLen", "i", "start", "doubleQuotedString", "value", "json", "implicitKey", "minMultiLineLength", "indent", "ch", "code", "foldFlowLines", "FOLD_QUOTED", "singleQuotedString", "res", "FOLD_FLOW", "quotedString", "singleQuote", "qs", "hasDouble", "hasSingle", "blockEndNewlines", "blockString", "comment", "type", "onComment", "onChompKeep", "blockQuote", "commentString", "literal", "Scalar", "chomp", "endStart", "end", "endNlPos", "startWithSpace", "startEnd", "startNlPos", "header", "foldedValue", "literalFallback", "foldOptions", "body", "FOLD_BLOCK", "plainString", "item", "actualString", "indentStep", "inFlow", "test", "tag", "compat", "tags", "stringifyString", "ss", "_stringify", "_type", "defaultKeyType", "defaultStringType", "t", "createStringifyContext", "doc", "options", "opt", "stringifyComment", "inFlow", "getTagObject", "tags", "item", "match", "t", "tagObj", "obj", "isScalar", "testMatch", "name", "stringifyProps", "node", "anchors", "props", "anchor", "isCollection", "anchorIsValid", "tag", "stringify", "ctx", "onComment", "onChompKeep", "isPair", "isAlias", "isNode", "o", "str", "stringifyString", "stringifyPair", "key", "value", "ctx", "onComment", "onChompKeep", "allNullValues", "doc", "indent", "indentStep", "commentString", "indentSeq", "simpleKeys", "keyComment", "isNode", "isCollection", "msg", "explicitKey", "isScalar", "Scalar", "keyCommentDone", "chompKeep", "str", "stringify", "lineComment", "vsb", "vcb", "valueComment", "isSeq", "valueCommentDone", "valueStr", "ws", "cs", "indentComment", "vs0", "nl0", "hasNewline", "flow", "hasPropsLine", "sp0", "warn", "logLevel", "warning", "MERGE_KEY", "merge", "value", "Scalar", "addMergeToJSMap", "isMergeKey", "ctx", "key", "isScalar", "tag", "map", "isAlias", "isSeq", "it", "mergeValue", "source", "isMap", "srcMap", "addPairToJSMap", "ctx", "map", "key", "value", "isNode", "isMergeKey", "addMergeToJSMap", "jsKey", "toJS", "stringKey", "stringifyKey", "jsValue", "strCtx", "createStringifyContext", "node", "strKey", "jsonStr", "warn", "createPair", "key", "value", "ctx", "k", "createNode", "v", "Pair", "_Pair", "NODE_TYPE", "PAIR", "schema", "isNode", "_", "pair", "addPairToJSMap", "onComment", "onChompKeep", "stringifyPair", "stringifyCollection", "collection", "ctx", "options", "stringifyFlowCollection", "stringifyBlockCollection", "comment", "items", "blockItemPrefix", "flowChars", "itemIndent", "onChompKeep", "onComment", "indent", "commentString", "itemCtx", "chompKeep", "lines", "i", "item", "isNode", "addCommentBefore", "isPair", "ik", "str", "stringify", "lineComment", "line", "indentComment", "indentStep", "fcPadding", "reqNewline", "linesAtValue", "iv", "start", "end", "len", "sum", "ic", "findPair", "items", "key", "k", "isScalar", "it", "isPair", "YAMLMap", "Collection", "schema", "MAP", "obj", "ctx", "keepUndefined", "replacer", "map", "add", "value", "createPair", "pair", "overwrite", "_pair", "Pair", "prev", "sortEntries", "isScalarValue", "i", "item", "keepScalar", "node", "_", "Type", "addPairToJSMap", "onComment", "onChompKeep", "stringifyCollection", "map", "YAMLMap", "onError", "isMap", "schema", "obj", "ctx", "YAMLSeq", "Collection", "schema", "SEQ", "value", "key", "idx", "asItemIndex", "keepScalar", "it", "isScalar", "prev", "isScalarValue", "_", "ctx", "seq", "item", "toJS", "onComment", "onChompKeep", "stringifyCollection", "obj", "replacer", "i", "createNode", "seq", "YAMLSeq", "onError", "isSeq", "schema", "obj", "ctx", "string", "value", "str", "item", "ctx", "onComment", "onChompKeep", "stringifyString", "nullTag", "value", "Scalar", "source", "ctx", "boolTag", "value", "str", "Scalar", "source", "ctx", "sv", "stringifyNumber", "format", "minFractionDigits", "tag", "value", "num", "n", "i", "d", "floatNaN", "value", "str", "stringifyNumber", "floatExp", "node", "num", "float", "Scalar", "dot", "intIdentify", "value", "intResolve", "str", "offset", "radix", "intAsBigInt", "intStringify", "node", "prefix", "stringifyNumber", "intOct", "_onError", "opt", "int", "intHex", "schema", "map", "seq", "string", "nullTag", "boolTag", "intOct", "int", "intHex", "floatNaN", "floatExp", "float", "intIdentify", "value", "stringifyJSON", "jsonScalars", "str", "Scalar", "_onError", "intAsBigInt", "jsonError", "onError", "schema", "map", "seq", "binary", "value", "src", "onError", "str", "buffer", "comment", "type", "ctx", "onComment", "onChompKeep", "buf", "s", "i", "Scalar", "lineWidth", "n", "lines", "o", "stringifyString", "resolvePairs", "seq", "onError", "isSeq", "i", "item", "isPair", "isMap", "pair", "Pair", "Scalar", "cn", "createPairs", "schema", "iterable", "ctx", "replacer", "pairs", "YAMLSeq", "it", "key", "value", "keys", "createPair", "YAMLOMap", "_YAMLOMap", "YAMLSeq", "YAMLMap", "_", "ctx", "map", "pair", "key", "value", "isPair", "toJS", "schema", "iterable", "pairs", "createPairs", "omap", "seq", "onError", "resolvePairs", "seenKeys", "isScalar", "boolStringify", "value", "source", "ctx", "trueTag", "falseTag", "Scalar", "floatNaN", "value", "str", "stringifyNumber", "floatExp", "node", "num", "float", "Scalar", "dot", "f", "intIdentify", "value", "intResolve", "str", "offset", "radix", "intAsBigInt", "sign", "n", "intStringify", "node", "prefix", "stringifyNumber", "intBin", "_onError", "opt", "intOct", "int", "intHex", "YAMLSet", "_YAMLSet", "YAMLMap", "schema", "key", "pair", "isPair", "Pair", "findPair", "keepPair", "isScalar", "value", "prev", "_", "ctx", "onComment", "onChompKeep", "iterable", "replacer", "set", "createPair", "map", "onError", "isMap", "parseSexagesimal", "str", "asBigInt", "sign", "parts", "num", "n", "res", "p", "stringifySexagesimal", "node", "value", "stringifyNumber", "_60", "intTime", "_onError", "intAsBigInt", "floatTime", "timestamp", "match", "year", "month", "day", "hour", "minute", "second", "millisec", "date", "tz", "d", "schema", "map", "seq", "string", "nullTag", "trueTag", "falseTag", "intBin", "intOct", "int", "intHex", "floatNaN", "floatExp", "float", "binary", "merge", "omap", "pairs", "set", "intTime", "floatTime", "timestamp", "schemas", "schema", "map", "seq", "string", "tagsByName", "binary", "boolTag", "float", "floatExp", "floatNaN", "floatTime", "int", "intHex", "intOct", "intTime", "merge", "nullTag", "omap", "pairs", "set", "timestamp", "coreKnownTags", "getTags", "customTags", "schemaName", "addMergeTag", "schemaTags", "tags", "keys", "key", "tag", "tagObj", "tagName", "sortMapEntriesByKey", "a", "b", "Schema", "_Schema", "compat", "customTags", "merge", "resolveKnownTags", "schema", "sortMapEntries", "toStringDefaults", "getTags", "coreKnownTags", "MAP", "map", "SCALAR", "string", "SEQ", "seq", "copy", "stringifyDocument", "doc", "options", "lines", "hasDirectives", "dir", "ctx", "createStringifyContext", "commentString", "cs", "indentComment", "chompKeep", "contentComment", "isNode", "onChompKeep", "body", "stringify", "lineComment", "dc", "Document", "_Document", "value", "replacer", "options", "NODE_TYPE", "DOC", "_replacer", "opt", "version", "Directives", "copy", "isNode", "assertCollection", "path", "node", "name", "prev", "anchorNames", "findNewAnchor", "Alias", "keyToStr", "v", "asStr", "aliasDuplicateObjects", "anchorPrefix", "flow", "keepUndefined", "onTagObj", "tag", "onAnchor", "setAnchors", "sourceObjects", "createNodeAnchors", "ctx", "createNode", "isCollection", "key", "k", "Pair", "isEmptyPath", "keepScalar", "isScalar", "collectionFromPath", "sv", "Schema", "json", "jsonArg", "mapAsMap", "maxAliasCount", "reviver", "res", "toJS", "count", "applyReviver", "s", "stringifyDocument", "contents", "YAMLError", "name", "pos", "code", "message", "YAMLParseError", "YAMLWarning", "prettifyError", "src", "lc", "error", "line", "col", "ci", "lineStr", "trimStart", "prev", "count", "end", "pointer", "resolveProps", "tokens", "flow", "indicator", "next", "offset", "onError", "parentIndent", "startOnNewline", "spaceBefore", "atNewline", "hasSpace", "comment", "commentSep", "hasNewline", "reqSpace", "tab", "anchor", "tag", "newlineAfterProp", "comma", "found", "start", "token", "cb", "last", "end", "containsNewline", "key", "st", "it", "flowIndentCheck", "indent", "fc", "onError", "end", "containsNewline", "mapIncludes", "ctx", "items", "search", "uniqueKeys", "isEqual", "a", "b", "isScalar", "pair", "startColMsg", "resolveBlockMap", "composeNode", "composeEmptyNode", "ctx", "bm", "onError", "tag", "NodeClass", "YAMLMap", "map", "offset", "commentEnd", "collItem", "start", "key", "sep", "value", "keyProps", "resolveProps", "implicitKey", "containsNewline", "keyStart", "keyNode", "flowIndentCheck", "mapIncludes", "valueProps", "valueNode", "pair", "Pair", "resolveBlockSeq", "composeNode", "composeEmptyNode", "ctx", "bs", "onError", "tag", "NodeClass", "YAMLSeq", "seq", "offset", "commentEnd", "start", "value", "props", "resolveProps", "node", "flowIndentCheck", "resolveEnd", "end", "offset", "reqSpace", "onError", "comment", "hasSpace", "sep", "token", "source", "type", "cb", "blockMsg", "isBlock", "token", "resolveFlowCollection", "composeNode", "composeEmptyNode", "ctx", "fc", "onError", "tag", "isMap", "fcName", "NodeClass", "YAMLMap", "YAMLSeq", "coll", "atRoot", "offset", "i", "collItem", "start", "key", "sep", "value", "props", "resolveProps", "containsNewline", "prevItemComment", "loop", "st", "prev", "isPair", "valueNode", "keyStart", "keyNode", "valueProps", "pair", "Pair", "map", "mapIncludes", "endRange", "expectedEnd", "ce", "ee", "cePos", "name", "msg", "end", "resolveEnd", "resolveCollection", "CN", "ctx", "token", "onError", "tagName", "tag", "coll", "resolveBlockMap", "resolveBlockSeq", "resolveFlowCollection", "Coll", "composeCollection", "props", "tagToken", "msg", "anchor", "nl", "lastProp", "expType", "YAMLMap", "YAMLSeq", "t", "kt", "res", "node", "isNode", "Scalar", "resolveBlockScalar", "ctx", "scalar", "onError", "start", "header", "parseBlockScalarHeader", "type", "Scalar", "lines", "splitLines", "chompStart", "i", "content", "value", "end", "trimIndent", "offset", "contentStart", "indent", "sep", "prevMoreIndented", "crlf", "message", "props", "strict", "source", "mode", "chomp", "error", "ch", "n", "hasSpace", "comment", "length", "token", "ts", "split", "first", "m", "resolveFlowScalar", "scalar", "strict", "onError", "offset", "type", "source", "end", "_type", "value", "_onError", "rel", "code", "msg", "Scalar", "plainValue", "singleQuotedValue", "doubleQuotedValue", "valueEnd", "re", "resolveEnd", "badChar", "foldLines", "first", "line", "match", "res", "sep", "pos", "last", "i", "ch", "fold", "foldNewline", "next", "cc", "escapeCodes", "length", "parseCharCode", "raw", "wsStart", "composeScalar", "ctx", "token", "tagToken", "onError", "value", "type", "comment", "range", "resolveBlockScalar", "resolveFlowScalar", "tagName", "msg", "tag", "SCALAR", "findScalarTagByName", "findScalarTagByTest", "scalar", "res", "isScalar", "Scalar", "error", "schema", "matchWithTest", "kt", "atKey", "directives", "compat", "ts", "cs", "emptyScalarPosition", "offset", "before", "pos", "i", "st", "CN", "composeNode", "composeEmptyNode", "ctx", "token", "props", "onError", "atKey", "spaceBefore", "comment", "anchor", "tag", "node", "isSrcToken", "composeAlias", "composeScalar", "composeCollection", "message", "isScalar", "offset", "before", "pos", "end", "emptyScalarPosition", "options", "source", "alias", "Alias", "valueEnd", "re", "resolveEnd", "composeDoc", "options", "directives", "offset", "start", "value", "end", "onError", "opts", "doc", "Document", "ctx", "props", "resolveProps", "composeNode", "composeEmptyNode", "contentEnd", "re", "resolveEnd", "getErrorPos", "src", "offset", "source", "parsePrelude", "prelude", "comment", "atComment", "afterEmptyLine", "Composer", "options", "code", "message", "warning", "pos", "YAMLWarning", "YAMLParseError", "Directives", "doc", "afterDoc", "dc", "isCollection", "it", "isPair", "cb", "tokens", "forceDoc", "endOffset", "token", "composeDoc", "msg", "error", "end", "resolveEnd", "opts", "Document", "cst_exports", "__export", "BOM", "DOCUMENT", "FLOW_END", "SCALAR", "createScalarToken", "isCollection", "isScalar", "prettyToken", "resolveAsScalar", "setScalarValue", "stringify", "tokenType", "visit", "resolveAsScalar", "token", "strict", "onError", "_onError", "pos", "code", "message", "offset", "YAMLParseError", "resolveFlowScalar", "resolveBlockScalar", "createScalarToken", "value", "context", "implicitKey", "indent", "inFlow", "type", "source", "stringifyString", "end", "he", "head", "body", "props", "addEndtoBlockProps", "setScalarValue", "afterKey", "header", "setBlockScalarValue", "setFlowScalarValue", "key", "st", "oa", "tok", "nl", "stringify", "cst", "stringifyToken", "stringifyItem", "token", "res", "tok", "item", "st", "start", "key", "sep", "value", "BREAK", "SKIP", "REMOVE", "visit", "cst", "visitor", "_visit", "path", "item", "field", "index", "tok", "parent", "coll", "ctrl", "token", "i", "ci", "BOM", "DOCUMENT", "FLOW_END", "SCALAR", "isCollection", "token", "isScalar", "prettyToken", "tokenType", "source", "isEmpty", "ch", "hexDigits", "tagChars", "flowIndicatorChars", "invalidAnchorChars", "isNotAnchorChar", "Lexer", "source", "incomplete", "next", "i", "n", "offset", "indent", "dt", "end", "state", "line", "BOM", "dirEnd", "cs", "sp", "DOCUMENT", "s", "ch0", "ch1", "nl", "FLOW_END", "quote", "qb", "loop", "lastChar", "SCALAR", "inFlow", "allowEmpty", "allowTabs", "test", "LineCounter", "offset", "low", "high", "mid", "start", "includesToken", "list", "type", "i", "findNonEmptyIndex", "isFlowToken", "token", "getPrevProps", "parent", "it", "getFirstKeyStartProps", "prev", "loop", "fixFlowSeqItems", "fc", "Parser", "onNewLine", "Lexer", "source", "incomplete", "lexeme", "tokenType", "message", "top", "n", "error", "last", "st", "doc", "bv", "scalar", "start", "sep", "map", "nl", "end", "atMapIndent", "atNextItem", "key", "fs", "seq", "indent", "docEnd", "parseOptions", "options", "prettyErrors", "LineCounter", "parseAllDocuments", "source", "lineCounter", "parser", "Parser", "composer", "Composer", "docs", "doc", "prettifyError", "parseDocument", "_doc", "YAMLParseError", "parse", "src", "reviver", "_reviver", "warning", "warn", "stringify", "value", "replacer", "_replacer", "indent", "keepUndefined", "isDocument", "Document", "browser_default", "dist_exports", "backimg", "base64DecodeUtf8", "subapi", "mihomo_top", "singbox_1_11", "singbox_1_12", "singbox_1_12_alpha", "singbox_1_13", "beiantext", "beiandizi", "str", "binary", "bytes", "char", "buildApiUrl", "rawUrl", "BASE_API", "ua", "params", "fetchResponse", "url", "userAgent", "response", "headersObj", "sanitizedCD", "sanitizeContentDisposition", "textData", "jsonData", "browser_default", "splitUrlsAndProxies", "urls", "result", "proxyText", "Top_Data", "top", "Rule_Data", "rule", "configs", "mihomo", "singbox", "data", "modes", "sub", "headers", "contentDisposition", "filenameMatch", "originalFilename", "fallback", "encoded", "fetchpackExtract", "processNames", "excludeCommentKeywords", "excludeNames", "res", "text", "line", "match", "processName", "keyword", "fetchipExtract", "ipcidrs", "jsondata", "getMihomo_Proxies_Data", "e", "handleSingleUrl", "handleMultipleUrls", "res", "fetchWithFallback", "processProxies", "formatResponse", "data", "responseList", "i", "randomIndex", "selectedResponse", "url", "userAgent", "sub", "fetchResponse", "apiUrl", "buildApiUrl", "proxies", "udpEnabled", "index", "proxy", "originalResponse", "additionalData", "getmihomo_config", "e", "splitUrlsAndProxies", "Mihomo_Top_Data", "Mihomo_Rule_Data", "Mihomo_Proxies_Data", "Exclude_Package", "Exclude_Address", "Top_Data", "Rule_Data", "getMihomo_Proxies_Data", "fetchpackExtract", "fetchipExtract", "getMihomo_Proxies_Grouping", "applyTemplate", "top", "rule", "proxies", "groups", "deletedGroups", "updatedGroups", "group", "matchFound", "filter", "hasIgnoreCase", "cleanedFilter", "regex", "proxy", "proxyName", "deletedGroup", "getSingbox_Outbounds_Data", "e", "processSingleUrl", "processMultipleUrls", "url", "options", "response", "fetchWithFallback", "processOutbounds", "formatResponse", "outboundsList", "responseList", "randomResponse", "addIndex", "index", "fetchResponse", "hasValidOutbounds", "apiUrl", "buildApiUrl", "outbounds", "outbound", "getsingbox_config", "e", "top", "Verbose", "splitUrlsAndProxies", "Singbox_Top_Data", "Singbox_Rule_Data", "Singbox_Outbounds_Data", "Exclude_Package", "Exclude_Address", "Top_Data", "Rule_Data", "getSingbox_Outbounds_Data", "fetchpackExtract", "fetchipExtract", "outboundArrs", "ApiUrlname", "res", "loadAndSetOutbounds", "applyTemplate", "matched", "v112alphaMatch", "v112betaMatch", "v111Match", "v112Match", "v113Match", "num", "data", "excludedTypes", "outbound", "Outbounds", "processOutboundFilters", "matchedOutbounds", "hasValidAction", "filter", "currentMatched", "pattern", "ignoreCase", "parseRegexPattern", "regex", "applyFilterAction", "keywords", "items", "action", "name", "updateOutboundsArray", "cleanRemovedTags", "outbounds", "removedTags", "item", "tag", "processedOutbounds", "rule", "existingSet", "newSet", "mergedMap", "p", "addExcludePackage", "addExcludeAddress", "singboxTopData", "newPackages", "inbound", "newddress", "getv2ray_config", "e", "apiurl", "buildApiUrl", "res", "fetchResponse", "CSS", "e", "css_default", "getFakePage", "e", "css_default", "handler", "req", "res", "url", "e", "backimg", "subapi", "mihomo_top", "singbox_1_11", "singbox_1_12", "singbox_1_12_alpha", "singbox_1_13", "beiantext", "beiandizi", "configs", "modes", "u", "html", "getFakePage", "result", "getsingbox_config", "getmihomo_config", "getv2ray_config", "rawHeaders", "headersToIgnore", "key", "value", "err"]
}
